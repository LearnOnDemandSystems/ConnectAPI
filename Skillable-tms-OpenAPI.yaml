---
openapi: 3.0.3
info:
  title: TMS API
  description: "Documentation on how and when to use the OneLearn TMS API at \n[https://docs.skillable.com](https://lms.learnondemand.net/apidocumentation).\n\n# Introduction\nThis API is documented in **OpenAPI format** and is based on\n[OneLearn TMS](https://lms.learnondemand.net/apidocumentation) provided by [Skillable.com](http://skillable.com) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n# OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[OneLearn TMS](https://lms.learnondemand.net/apidocumentation) provided by [Skillable.com](http://skillable.com) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n# Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n# Authentication\n\nOneLearn TMS offers two forms of authentication:\n  - API Key\n  - OAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n\n<SecurityDefinitions />\n"
  termsOfService: https://skillable.com/terms-and-conditions/
  contact:
    name: Skillable Support
    url: https://skillable.com/customer-support/
    email: apiteam@skillable.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
  x-logo:
    url: https://skillable.com/wp-content/uploads/2021/09/Skillable-Logo-color.svg
    altText: Skillable logo
externalDocs:
  description: Find out how to create Github repo for your OpenAPI spec.
  url: https://github.com/Rebilly/generator-openapi-repo
servers:
- url: https://lms.learnondemand.net/api/2.0
  description: OneLearn TMS API
security:
- apiKeyHeader: []
- apiKeyQuery: []
tags:
- name: User Management
  description: "The User Management API commands are used to administer all types of user accounts within the TMS.  This includes but is not limited to the following actions:\n* Creating user accounts\n* Search for user accounts    \n* Modify user accounts    \n* Retrieve user accounts properties    \n* Query user activity    \n* Closure and deletion of user accounts"
- name: Organization Management
  description: Organizations within the TMS provide the ability to separate content and access between different customers. For most customers there is little need for Organization Management using the API.  However, for large content providers Organization Management can be vital. The Organization Management of the TMS allows for the query, creation, modification, and deletion of Organizations.
- name: Course Management
  description: Courses in the TMS represent a related set of learning activities that create a single learning journey.  The Course Management API commands allow for the searching of courses, which will be required when creating classes and/or subscriptions as well as being able to return any collected course feedback.
- name: Class Enrollment Management
  description: "Classes represent an instance of a course delivered as an instructor led event.  Class enrollements define the connection of a user and the class the user will be part of.  The Class Enrollment Management API alloows the following tasks to be completed:\n* Create Class Enrollments for a user\n* Update Class Enrollments for a user \n* Search for Class Enrollments for a user\n* Delete Class Enrollments for a user\n* Retrive specific details for Class Enrollemnts"
- name: Course Assignment Management
  description: "Course Assignments are instances of a course being used for self-study purposes, and not connected with an Instructor or a class.  The Course Assignment Management API group of commands allows the following capabilities:  \n* Create Class Enrollments for a user  \n* Update Class Enrollments for a user  \n* Search for Class Enrollments for a user  \n* Delete Class Enrollments for a user  \n* Retrieve  specific details for Classes Enrollemnts  "
- name: Searching
  description: |-
    The Searching API comand group provides commands for the following scenarions:
    * To search the TMS Course Catalog
    * Find Lab Instances (Lab Instances represent individual Lab launches against the LOD platform)
    * Search  for launched activitives external to LOD e.g. Video, documents, SCORM, etc
- name: Subscription Management
  description: "Subscriptions (previously known as Clubs), are mostly used for the assignment of self-study learning.  The Subscription Management section allows the creation and management of these subscription assignmenst to users.  The functions are grouped into the areas of:  \n* Creations of Subscriptions  \n* Searching for Subscriptions   \n* Modify a Subscriptions  \n* Delete a Subscriptions "
- name: Company Management
  description: Company Management within the Skillable TMS allows for the registration of companies that are the customers of a Skillable TMS customer.  The use of this object type is to enable a Skillable TMS customer to store contact information for their customers.  This information can then be connected to users of the TMS and allows reports to be run which return activity of users from a specific customer.  The API allows for the creation, modification, updating and searching of companies.
- name: Survey Management
  description: Survey Management allows the retrival of all survey responses for a specific course.
- name: Class Management
  description: The Class Management group of API command allows for the creation, management and finding of scheduled classes within the Skillable TMS.  Classes can be found by using Class ID's as well as the training key associated with a class
paths:
  /GetUser/{id}:
    get:
      tags:
      - User Management
      summary: GetUser
      description: Allows you to get information about a user (user object) with the given ID.
      operationId: GetUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the user to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      deprecated: false
  /GetUserByEmail:
    get:
      tags:
      - User Management
      summary: GetUserByEmail
      description: Allows you to get information about a user with the given primary email address.
      operationId: GetUserByEmail
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: email
        in: query
        description: The primary email address of the user to retrieve.
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      deprecated: false
  /GetUserByExternalId/{id}:
    get:
      tags:
      - User Management
      summary: GetUserByExternalId
      description: Allows you to get information about a user with the given ExternalID.  The external ID is a unique identifier from your external system.
      operationId: GetUserByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the user to retrieve.
        required: true
        style: simple
        explode: true
        schema:
          type: string
          example: C9876ZFGEFER9876
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      deprecated: false
  /CreateUser:
    get:
      tags:
      - User Management
      summary: CreateUser
      description: Allows you to create a user.
      operationId: CreateUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userName
        in: query
        description: 'The user''s username (used during sign-in). Email address can be used as long as it is unique within the system. Note: even if the user will be using an external authentication provider, the username/password properties should still be provided.'
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: john.smith
      - name: password
        in: query
        description: 'The user''s password (used during sign-in). Note: even if the user will be using an external authentication provider, the username/password properties should still be provided. The user will be prompted to reset their password on the next signin.'
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: The user's e-mail address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: firstName
        in: query
        description: The user's first name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: The user's last name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationId
        in: query
        description: The unique identifier of the organization the user belongs to. This can be the organization that corresponds to your API key, or a child organization.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: externalId
        in: query
        description: The user's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: middleName
        in: query
        description: The user's middle name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The user's title.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: companyId
        in: query
        description: The Id of the user's company (set only if the user belongs to a company).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: managerId
        in: query
        description: The user Id of the user's manager (set only if the user belongs to a manager).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: disabled
        in: query
        description: Indicates whether the user account has been disabled.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: phone
        in: query
        description: The user's phone number.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: phone2
        in: query
        description: The user's secondary phone number.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address1
        in: query
        description: First line of the user's address.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address2
        in: query
        description: Second line of the user's address
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: city
        in: query
        description: The user's city.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: The user's state.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: country
        in: query
        description: The user's country.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zip
        in: query
        description: The user's zip/postal code.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: profileImageUrl
        in: query
        description: URL to the user's profile image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeZoneId
        in: query
        description: "The time zone for the data object. If not specified, the timezone of the organization will be used.  \n\n**Allowed values**  \n  \nAfghanistan Standard Time  \nAlaskan Standard Time  \nAleutian Standard Time  \nAltai Standard Time  \nArab Standard Time  \nArabian Standard Time  \nArabic Standard Time  \nArgentina Standard Time  \nAstrakhan Standard Time  \nAtlantic Standard Time  \nAUS Central Standard Time  \nAus Central W. Standard Time  \nAUS Eastern Standard Time  \nAzerbaijan Standard Time  \nAzores Standard Time  \nBahia Standard Time  \nBangladesh Standard Time  \nBelarus Standard Time  \nBougainville Standard Time  \nCanada Central Standard Time  \nCape Verde Standard Time  \nCaucasus Standard Time  \nCen. Australia Standard Time  \nCentral America Standard Time  \nCentral Asia Standard Time  \nCentral Brazilian Standard Time  \nCentral Europe Standard Time  \nCentral European Standard Time  \nCentral Pacific Standard Time  \nCentral Standard Time  \nCentral Standard Time (Mexico)  \nChatham Islands Standard Time  \nChina Standard Time  \nCuba Standard Time  \nDateline Standard Time  \nE. Africa Standard Time  \nE. Australia Standard Time  \nE. Europe Standard Time  \nE. South America Standard Time  \nEaster Island Standard Time  \nEastern Standard Time  \nEastern Standard Time (Mexico)  \nEgypt Standard Time  \nEkaterinburg Standard Time  \nFiji Standard Time  \nFLE Standard Time  \nGeorgian Standard Time  \nGMT Standard Time  \nGreenland Standard Time  \nGreenwich Standard Time  \nGTB Standard Time  \nHaiti Standard Time  \nHawaiian Standard Time  \nIndia Standard Time  \nIran Standard Time  \nIsrael Standard Time  \nJordan Standard Time  \nKaliningrad Standard Time  \nKamchatka Standard Time  \nKorea Standard Time  \nLibya Standard Time  \nLine Islands Standard Time  \nLord Howe Standard Time  \nMagadan Standard Time  \nMagallanes Standard Time  \nMarquesas Standard Time  \nMauritius Standard Time  \nMid-Atlantic Standard Time  \nMiddle East Standard Time  \nMontevideo Standard Time  \nMorocco Standard Time  \nMountain Standard Time  \nMountain Standard Time (Mexico)  \nMyanmar Standard Time  \nN. Central Asia Standard Time  \nNamibia Standard Time  \nNepal Standard Time  \nNew Zealand Standard Time  \nNewfoundland Standard Time  \nNorfolk Standard Time  \nNorth Asia East Standard Time  \nNorth Asia Standard Time  \nNorth Korea Standard Time  \nOmsk Standard Time  \nPacific SA Standard Time  \nPacific Standard Time  \nPacific Standard Time (Mexico)  \nPakistan Standard Time  \nParaguay Standard Time  \nQyzylorda Standard Time  \nRomance Standard Time  \nRussia Time Zone 10  \nRussia Time Zone 11  \nRussia Time Zone 3  \nRussian Standard Time  \nSA Eastern Standard Time  \nSA Pacific Standard Time  \nSA Western Standard Time  \nSaint Pierre Standard Time  \nSakhalin Standard Time  \nSamoa Standard Time  \nSao Tome Standard Time  \nSaratov Standard Time  \nSE Asia Standard Time  \nSingapore Standard Time  \nSouth Africa Standard Time  \nSouth Sudan Standard Time  \nSri Lanka Standard Time  \nSudan Standard Time  \nSyria Standard Time  \nTaipei Standard Time  \nTasmania Standard Time  \nTocantins Standard Time  \nTokyo Standard Time  \nTomsk Standard Time  \nTonga Standard Time  \nTransbaikal Standard Time  \nTurkey Standard Time  \nTurks And Caicos Standard Time  \nUlaanbaatar Standard Time  \nUS Eastern Standard Time  \nUS Mountain Standard Time  \nUTC  \nUTC+12  \nUTC+13  \nUTC-02  \nUTC-08  \nUTC-09  \nUTC-11  \nVenezuela Standard Time  \nVladivostok Standard Time  \nVolgograd Standard Time  \nW. Australia Standard Time  \nW. Central Africa Standard Time  \nW. Europe Standard Time  \nW. Mongolia Standard Time  \nWest Asia Standard Time  \nWest Bank Standard Time  \nWest Pacific Standard Time  \nYakutsk Standard Time  \nYukon Standard Time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: roleId
        in: query
        description: 'An identifier for the role the user should belong to. You can provide multiple instances of this parameter to add the user to multiple roles. For example: roleId=0&roleId=2&roleId=20. You can discover roles available to your API integration by using the GetUserRoles command.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: managedOrganizationId
        in: query
        description: 'An identifier for the organization the user should have management rights for. You can provide multiple instances of this parameter if the user should have management rights over multiple organizations. For example: managedOrganizationId=30&managedOrganizationId=45&managedOrganizationId=78. All managed organizations must the API caller organization or one of its children.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: forcePasswordChange
        in: query
        description: An optional parameter to force the user to change their password on the next login
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
      deprecated: false
  /DeleteUser/{id}:
    get:
      tags:
      - User Management
      summary: DeleteUser
      description: Allows you to delete a user.
      operationId: DeleteUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The user's ID
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateUser:
    get:
      tags:
      - User Management
      summary: UpdateUser
      description: Allows you to update a user
      operationId: UpdateUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The user's LMS unique identifier.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 4873
      - name: userName
        in: query
        description: 'The user''s username (used during sign-in). Email address can be used as long as it is unique within the system. Note: even if the user will be using an external authentication provider, the username/password properties should still be provided.'
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: email
        in: query
        description: The user's e-mail address
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: firstName
        in: query
        description: The user's first name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: The user's last name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationId
        in: query
        description: The unique identifier of the organization the user belongs to. This can be the organization that corresponds to your API key, or a child organization.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: externalId
        in: query
        description: The user's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: middleName
        in: query
        description: The user's middle name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: title
        in: query
        description: The user's title.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: companyId
        in: query
        description: The Id of the user's company (set only if the user belongs to a company).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: managerId
        in: query
        description: The user Id of the user's manager (set only if the user belongs to a manager).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 12345678
      - name: disabled
        in: query
        description: Indicates whether the user account has been disabled.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: phone
        in: query
        description: The user's phone number.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: phone2
        in: query
        description: The user's secondary phone number.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address1
        in: query
        description: First line of the user's address.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: address2
        in: query
        description: Second line of the user's address
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: city
        in: query
        description: The user's city.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: The user's state.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: country
        in: query
        description: The user's country.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: zip
        in: query
        description: The user's zip/postal code.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: profileImageUrl
        in: query
        description: URL to the user's profile image.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: timeZoneId
        in: query
        description: "The user's time zone. If not specified, the timezone of the organization will be used.  \n\n**Allowed values**  \n  \nAfghanistan Standard Time  \nAlaskan Standard Time  \nAleutian Standard Time  \nAltai Standard Time  \nArab Standard Time  \nArabian Standard Time  \nArabic Standard Time  \nArgentina Standard Time  \nAstrakhan Standard Time  \nAtlantic Standard Time  \nAUS Central Standard Time  \nAus Central W. Standard Time  \nAUS Eastern Standard Time  \nAzerbaijan Standard Time  \nAzores Standard Time  \nBahia Standard Time  \nBangladesh Standard Time  \nBelarus Standard Time  \nBougainville Standard Time  \nCanada Central Standard Time  \nCape Verde Standard Time  \nCaucasus Standard Time  \nCen. Australia Standard Time  \nCentral America Standard Time  \nCentral Asia Standard Time  \nCentral Brazilian Standard Time  \nCentral Europe Standard Time  \nCentral European Standard Time  \nCentral Pacific Standard Time  \nCentral Standard Time  \nCentral Standard Time (Mexico)  \nChatham Islands Standard Time  \nChina Standard Time  \nCuba Standard Time  \nDateline Standard Time  \nE. Africa Standard Time  \nE. Australia Standard Time  \nE. Europe Standard Time  \nE. South America Standard Time  \nEaster Island Standard Time  \nEastern Standard Time  \nEastern Standard Time (Mexico)  \nEgypt Standard Time  \nEkaterinburg Standard Time  \nFiji Standard Time  \nFLE Standard Time  \nGeorgian Standard Time  \nGMT Standard Time  \nGreenland Standard Time  \nGreenwich Standard Time  \nGTB Standard Time  \nHaiti Standard Time  \nHawaiian Standard Time  \nIndia Standard Time  \nIran Standard Time  \nIsrael Standard Time  \nJordan Standard Time  \nKaliningrad Standard Time  \nKamchatka Standard Time  \nKorea Standard Time  \nLibya Standard Time  \nLine Islands Standard Time  \nLord Howe Standard Time  \nMagadan Standard Time  \nMagallanes Standard Time  \nMarquesas Standard Time  \nMauritius Standard Time  \nMid-Atlantic Standard Time  \nMiddle East Standard Time  \nMontevideo Standard Time  \nMorocco Standard Time  \nMountain Standard Time  \nMountain Standard Time (Mexico)  \nMyanmar Standard Time  \nN. Central Asia Standard Time  \nNamibia Standard Time  \nNepal Standard Time  \nNew Zealand Standard Time  \nNewfoundland Standard Time  \nNorfolk Standard Time  \nNorth Asia East Standard Time  \nNorth Asia Standard Time  \nNorth Korea Standard Time  \nOmsk Standard Time  \nPacific SA Standard Time  \nPacific Standard Time  \nPacific Standard Time (Mexico)  \nPakistan Standard Time  \nParaguay Standard Time  \nQyzylorda Standard Time  \nRomance Standard Time  \nRussia Time Zone 10  \nRussia Time Zone 11  \nRussia Time Zone 3  \nRussian Standard Time  \nSA Eastern Standard Time  \nSA Pacific Standard Time  \nSA Western Standard Time  \nSaint Pierre Standard Time  \nSakhalin Standard Time  \nSamoa Standard Time  \nSao Tome Standard Time  \nSaratov Standard Time  \nSE Asia Standard Time  \nSingapore Standard Time  \nSouth Africa Standard Time  \nSouth Sudan Standard Time  \nSri Lanka Standard Time  \nSudan Standard Time  \nSyria Standard Time  \nTaipei Standard Time  \nTasmania Standard Time  \nTocantins Standard Time  \nTokyo Standard Time  \nTomsk Standard Time  \nTonga Standard Time  \nTransbaikal Standard Time  \nTurkey Standard Time  \nTurks And Caicos Standard Time  \nUlaanbaatar Standard Time  \nUS Eastern Standard Time  \nUS Mountain Standard Time  \nUTC  \nUTC+12  \nUTC+13  \nUTC-02  \nUTC-08  \nUTC-09  \nUTC-11  \nVenezuela Standard Time  \nVladivostok Standard Time  \nVolgograd Standard Time  \nW. Australia Standard Time  \nW. Central Africa Standard Time  \nW. Europe Standard Time  \nW. Mongolia Standard Time  \nWest Asia Standard Time  \nWest Bank Standard Time  \nWest Pacific Standard Time  \nYakutsk Standard Time  \nYukon Standard Time  \n"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: forcePasswordChange
        in: query
        description: An optional parameter to force the user to change their password on the next login
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /AddUserToRole:
    get:
      tags:
      - User Management
      summary: AddUserToRole
      description: Allows you to add a user to a role
      operationId: AddUserToRole
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: roleId
        in: query
        description: The role ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /AddUserToRoles:
    get:
      tags:
      - User Management
      summary: AddUserToRoles
      description: Allows you to add a user to multiple roles
      operationId: AddUserToRoles
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: roleId
        in: query
        description: 'An identifier for the role the user should belong to. You can provide multiple instances of this parameter to add the user to multiple roles. For example: roleId=0&roleId=2&roleId=20. You can discover roles available to your API integration by using the GetUserRoles command.'
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /RemoveUserFromRole:
    get:
      tags:
      - User Management
      summary: RemoveUserFromRole
      description: Allows you remove a user from a role
      operationId: RemoveUserFromRole
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: roleId
        in: query
        description: The role ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /AddOrganizationManagementToUser:
    get:
      tags:
      - User Management
      summary: AddOrganizationManagementToUser
      description: Allows you to assign management rights over an organization to a single user
      operationId: AddOrganizationManagementToUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: organizationId
        in: query
        description: The organization ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /RemoveOrganizationManagementFromUser:
    get:
      tags:
      - User Management
      summary: RemoveOrganizationManagementFromUser
      description: Allows you remove management rights over an organization from a single user
      operationId: RemoveOrganizationManagementFromUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: organizationId
        in: query
        description: The organization ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateUserPassword:
    get:
      tags:
      - User Management
      summary: UpdateUserPassword
      description: Allows you to update a user's password.
      operationId: UpdateUserPassword
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The user's ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: password
        in: query
        description: The new password
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: forcePasswordChange
        in: query
        description: An optional parameter to force the user to change their password on the next login
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /GetSsoRedirectUrl:
    get:
      tags:
      - User Management
      summary: GetSsoRedirectUrl
      description: 'Allows you to retrieve a URL for redirecting a user into the the LMS for single sign-on. This allows you to land the student in the LMS without them having to login. Note: the URL is valid for only 20 seconds. The intention is for you to obtain the URL on demand when the user is to be redirected into the LMS from your system.'
      operationId: GetSsoRedirectUrl
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: userId
        in: query
        description: The user's LMS unique identifier
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: destinationUrl
        in: query
        description: An optional URL that you want the user to land on within the LMS. For instance, if you wanted to land the user on the class schedule, you could pass a value of "/Class/Schedule." Use of this feature requires some knowledge of the LMS URL schema. In general, you can figure out how URLs work by observing them while navigating within the LMS.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsoRedirectUrlReponse'
      deprecated: false
  /SearchSignInHistory:
    get:
      tags:
      - User Management
      summary: SearchSignInHistory
      description: Allows you to search for user sign
      operationId: SearchSignInHistory
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by. If not supplied, a default value of \"SignIn DESC\" will be assumed. You can append \" DESC\" after the sort value to sort descending. For example, \"SignIn DESC\" would sort by sign-in time in descending order. Possible values: \n- SignIn \n- LastName \n- FirstName \n- UserName \n- Email"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: An optional parameter user to filter for sign-ins for a particular user.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for sign-ins for a particular user using an external identifier.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1G87491-37DE-DFG1-127A-565159915A6B
      - name: after
        in: query
        description: An optional parameter used to filter for sign-ins that occured after a specified date. When used in conjunction with the "before" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: before
        in: query
        description: An optional parameter used to filter for sign-ins that occured before a specified date. When used in conjunction with the "after" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInHistorySearchHistoryResponse'
      deprecated: false
  /SearchUserActivity:
    get:
      tags:
      - User Management
      summary: SearchUserActivity
      description: Allows you to search for user activity.
      operationId: SearchUserActivity
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by. If not supplied, a default value of \"SignIn DESC\" will be assumed. You can append \" DESC\" after the sort value to sort descending. For example, \"SignIn DESC\" would sort by sign-in time in descending order. Possible values: \n- RequestTime \n- LastName \n- UserName \n- Organization"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: An optional parameter user to filter for activity for a particular user
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for activity for a particular user using an external identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1G87491-37DE-DFG1-127A-565159915A6B
      - name: activityAfter
        in: query
        description: An optional parameter used to filter for sign-ins that occured after a specified date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: activityBefore
        in: query
        description: An optional parameter used to filter for sign-ins that occured before a specified date
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchUserActivityResponse'
      deprecated: false
  /GetActiveSystemAnnouncements:
    get:
      tags:
      - User Management
      summary: GetActiveSystemAnnouncements
      description: Allows you to retreive active system announcements.
      operationId: GetActiveSystemAnnouncements
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: organizationId
        in: query
        description: The ID of the organization for which you would like to retrieve system announcements
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 4536
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnnouncementResponse'
      deprecated: false
  /CloseUserAccountById/{id}:
    get:
      tags:
      - User Management
      summary: CloseUserAccountById
      description: Allows you close a user account removing all identifying information from the system.
      operationId: CloseUserAccountById
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the user to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int64
          example: 3453
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
      deprecated: false
  /CloseUserAccountByExternalId/{id}:
    get:
      tags:
      - User Management
      summary: CloseUserAccountByExternalId
      description: Allows you close a user account removing all identifying information from the system by providing a unique identifier from your external system.
      operationId: CloseUserAccountByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the user whose account to close
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
      deprecated: false
  /DeleteUserDataById/{id}:
    get:
      tags:
      - User Management
      summary: DeleteUserDataById
      description: Allows you remove specific types of user data for a user in the system.
      operationId: DeleteUserDataById
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the user to delete data of
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: dataTypeId
        in: query
        description: "The ID of the data type to delete. \n- Account = 0 \n- MicrosoftCommunications = 1 \n- PaymentInstrument = 2 \n- PreciseUserLocation = 3 \n- ProductAndServicePerformance = 4 \n- ProductAndServiceUsage = 5 \n- ProfessionalAndPersonalProfile = 6 \n- PublicPersonal = 7 \n- Recruitment = 8 \n- SearchRequestsAndQuery = 9 \n- SoftwareSetupAndInventory = 10 \n- Support = 11 \n- SupportContent = 12 \n- SupportInteraction = 13 \n- WorkContracts = 14 \n- WorkplaceInteractions = 15 \n- WorkProfile = 16 \n- LicensingAndPurchase = 17 \n- LearningAndDevelopment = 18 \n- InterestsAndFavorites = 19 \n- InkingTypingAndSpeechUtterance = 20 \n- Any = 21 \n- BrowsingHistory = 22 \n- CloudServiceProvider = 23 \n- CommuteAndTravel = 24 \n- CompensationAndBenefits = 25 \n- ContentConsumption = 26 \n- Credentials = 27 \n- CustomerContact = 28 \n- WorkRecognition = 29 \n- CustomerContactList = 30 \n- DemographicInformation = 31 \n- DeviceConnectivityAndConfiguration = 32 \n- EnvironmentalSensor = 33 \n- EUII = 34 \n- FeedbackAndRatings = 35 \n- FinancialAccountingAndRecords = 36 \n- FinancialTransactions = 37 \n- FitnessAndActivity = 38 \n- CustomerContent = 39 \n- WorkTime = 40 \n- Social = 41"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
      deprecated: false
  /DeleteUserDataByExternalId/{id}:
    get:
      tags:
      - User Management
      summary: DeleteUserDataByExternalId
      description: Allows you remove specific types of user data for a user in the system by providing a unique identifier from your external system.
      operationId: DeleteUserDataByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the user to delete data
        required: true
        style: simple
        explode: true
        schema:
          type: string
      - name: dataTypeId
        in: query
        description: "The ID of the data type to delete. \n- Account = 0 \n- MicrosoftCommunications = 1 \n- PaymentInstrument = 2 \n- PreciseUserLocation = 3 \n- ProductAndServicePerformance = 4 \n- ProductAndServiceUsage = 5 \n- ProfessionalAndPersonalProfile = 6 \n- PublicPersonal = 7 \n- Recruitment = 8 \n- SearchRequestsAndQuery = 9 \n- SoftwareSetupAndInventory = 10 \n- Support = 11 \n- SupportContent = 12 \n- SupportInteraction = 13 \n- WorkContracts = 14 \n- WorkplaceInteractions = 15 \n- WorkProfile = 16 \n- LicensingAndPurchase = 17 \n- LearningAndDevelopment = 18 \n- InterestsAndFavorites = 19 \n- InkingTypingAndSpeechUtterance = 20 \n- Any = 21 \n- BrowsingHistory = 22 \n- CloudServiceProvider = 23 \n- CommuteAndTravel = 24 \n- CompensationAndBenefits = 25 \n- ContentConsumption = 26 \n- Credentials = 27 \n- CustomerContact = 28 \n- WorkRecognition = 29 \n- CustomerContactList = 30 \n- DemographicInformation = 31 \n- DeviceConnectivityAndConfiguration = 32 \n- EnvironmentalSensor = 33 \n- EUII = 34 \n- FeedbackAndRatings = 35 \n- FinancialAccountingAndRecords = 36 \n- FinancialTransactions = 37 \n- FitnessAndActivity = 38 \n- CustomerContent = 39 \n- WorkTime = 40 \n- Social = 41"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
      deprecated: false
  /GetUserRoles:
    get:
      tags:
      - User Management
      summary: GetUserRoles
      description: Allows you to view all user roles available to your API integration.
      operationId: GetUserRoles
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
      deprecated: false
  /UpdateUserCustomFieldValue:
    get:
      tags:
      - User Management
      summary: UpdateUserCustomFieldValue
      description: Updates the current value of a specific custom field for a user.
      operationId: UpdateUserCustomFieldValue
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customFieldId
        in: query
        description: The ID of the custom field for which the value will be updated.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 4873
      - name: userId
        in: query
        description: The ID of the user for which the custom field value will be updated.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 57383
      - name: textValue
        in: query
        description: The value of a text type user custom field - Textbox and Dropdown List
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: booleanValue
        in: query
        description: The value for a boolean type user custom field - Checkbox
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: separatedListValues
        in: query
        description: A Tab separated list of all the text values for a multi-select custom field type - Checkbox List
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValueResponse'
      deprecated: false
  /GetOrganization/{id}:
    get:
      tags:
      - Organization Management
      summary: GetOrganization
      description: Allows you to get information about an organization.
      operationId: GetOrganization
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the organization to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
      deprecated: false
  /GetOrganizationByExternalId/{id}:
    get:
      tags:
      - Organization Management
      summary: GetOrganizationByExternalId
      description: Allows you to get information about an organization by providing a unique identifier from your external system.
      operationId: GetOrganizationByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the organization to retrieve.
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
      deprecated: false
  /CreateOrganization:
    get:
      tags:
      - Organization Management
      summary: CreateOrganization
      description: Allows you to create an organization.
      operationId: CreateOrganization
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: name
        in: query
        description: The organization's name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: externalId
        in: query
        description: The organization's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: An optional description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentId
        in: query
        description: The ID of the organization's parent organization. If not supplied, the organization will become a direct child of the API organization.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: timeZoneId
        in: query
        description: "The time zone for the data object. If not specified, the timezone of the organization will be used.  \n\n**Allowed values**  \n  \nAfghanistan Standard Time  \nAlaskan Standard Time  \nAleutian Standard Time  \nAltai Standard Time  \nArab Standard Time  \nArabian Standard Time  \nArabic Standard Time  \nArgentina Standard Time  \nAstrakhan Standard Time  \nAtlantic Standard Time  \nAUS Central Standard Time  \nAus Central W. Standard Time  \nAUS Eastern Standard Time  \nAzerbaijan Standard Time  \nAzores Standard Time  \nBahia Standard Time  \nBangladesh Standard Time  \nBelarus Standard Time  \nBougainville Standard Time  \nCanada Central Standard Time  \nCape Verde Standard Time  \nCaucasus Standard Time  \nCen. Australia Standard Time  \nCentral America Standard Time  \nCentral Asia Standard Time  \nCentral Brazilian Standard Time  \nCentral Europe Standard Time  \nCentral European Standard Time  \nCentral Pacific Standard Time  \nCentral Standard Time  \nCentral Standard Time (Mexico)  \nChatham Islands Standard Time  \nChina Standard Time  \nCuba Standard Time  \nDateline Standard Time  \nE. Africa Standard Time  \nE. Australia Standard Time  \nE. Europe Standard Time  \nE. South America Standard Time  \nEaster Island Standard Time  \nEastern Standard Time  \nEastern Standard Time (Mexico)  \nEgypt Standard Time  \nEkaterinburg Standard Time  \nFiji Standard Time  \nFLE Standard Time  \nGeorgian Standard Time  \nGMT Standard Time  \nGreenland Standard Time  \nGreenwich Standard Time  \nGTB Standard Time  \nHaiti Standard Time  \nHawaiian Standard Time  \nIndia Standard Time  \nIran Standard Time  \nIsrael Standard Time  \nJordan Standard Time  \nKaliningrad Standard Time  \nKamchatka Standard Time  \nKorea Standard Time  \nLibya Standard Time  \nLine Islands Standard Time  \nLord Howe Standard Time  \nMagadan Standard Time  \nMagallanes Standard Time  \nMarquesas Standard Time  \nMauritius Standard Time  \nMid-Atlantic Standard Time  \nMiddle East Standard Time  \nMontevideo Standard Time  \nMorocco Standard Time  \nMountain Standard Time  \nMountain Standard Time (Mexico)  \nMyanmar Standard Time  \nN. Central Asia Standard Time  \nNamibia Standard Time  \nNepal Standard Time  \nNew Zealand Standard Time  \nNewfoundland Standard Time  \nNorfolk Standard Time  \nNorth Asia East Standard Time  \nNorth Asia Standard Time  \nNorth Korea Standard Time  \nOmsk Standard Time  \nPacific SA Standard Time  \nPacific Standard Time  \nPacific Standard Time (Mexico)  \nPakistan Standard Time  \nParaguay Standard Time  \nQyzylorda Standard Time  \nRomance Standard Time  \nRussia Time Zone 10  \nRussia Time Zone 11  \nRussia Time Zone 3  \nRussian Standard Time  \nSA Eastern Standard Time  \nSA Pacific Standard Time  \nSA Western Standard Time  \nSaint Pierre Standard Time  \nSakhalin Standard Time  \nSamoa Standard Time  \nSao Tome Standard Time  \nSaratov Standard Time  \nSE Asia Standard Time  \nSingapore Standard Time  \nSouth Africa Standard Time  \nSouth Sudan Standard Time  \nSri Lanka Standard Time  \nSudan Standard Time  \nSyria Standard Time  \nTaipei Standard Time  \nTasmania Standard Time  \nTocantins Standard Time  \nTokyo Standard Time  \nTomsk Standard Time  \nTonga Standard Time  \nTransbaikal Standard Time  \nTurkey Standard Time  \nTurks And Caicos Standard Time  \nUlaanbaatar Standard Time  \nUS Eastern Standard Time  \nUS Mountain Standard Time  \nUTC  \nUTC+12  \nUTC+13  \nUTC-02  \nUTC-08  \nUTC-09  \nUTC-11  \nVenezuela Standard Time  \nVladivostok Standard Time  \nVolgograd Standard Time  \nW. Australia Standard Time  \nW. Central Africa Standard Time  \nW. Europe Standard Time  \nW. Mongolia Standard Time  \nWest Asia Standard Time  \nWest Bank Standard Time  \nWest Pacific Standard Time  \nYakutsk Standard Time  \nYukon Standard Time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: culture
        in: query
        description: "The default language/culture setting. This is used as a default when creating new users and events. If not specified, the culture of the parent organization will be used. \n\n Allowed Values \n\n \n- aa-DJ \n- aa-ER \n- aa-ET \n- af-NA \n- af-ZA \n- agq-CM \n- ak-GH \n- am-ET \n- ar-001 \n- ar-AE \n- ar-BH \n- ar-DJ \n- ar-DZ \n- ar-EG \n- ar-ER \n- ar-IL \n- ar-IQ \n- ar-JO \n- ar-KM \n- ar-KW \n- ar-LB \n- ar-LY \n- ar-MA \n- ar-MR \n- arn-CL \n- ar-OM \n- ar-PS \n- ar-QA \n- ar-SA \n- ar-SD \n- ar-SO \n- ar-SS \n- ar-SY \n- ar-TD \n- ar-TN \n- ar-YE \n- asa-TZ \n- as-IN \n- ast-ES \n- az-Cyrl-AZ \n- az-Latn-AZ \n- ba-RU \n- bas-CM \n- be-BY \n- bem-ZM \n- bez-TZ \n- bg-BG \n- bin-NG \n- bm-Latn-ML \n- bn-BD \n- bn-IN \n- bo-CN \n- bo-IN \n- br-FR \n- brx-IN \n- bs-Cyrl-BA \n- bs-Latn-BA \n- byn-ER \n- ca-AD \n- ca-ES \n- ca-ES-valencia \n- ca-FR \n- ca-IT \n- ce-RU \n- cgg-UG \n- chr-Cher-US \n- co-FR \n- cs-CZ \n- cu-RU \n- cy-GB \n- da-DK \n- da-GL \n- dav-KE \n- de-AT \n- de-BE \n- de-CH \n- de-DE \n- de-LI \n- de-LU \n- dje-NE \n- dsb-DE \n- dua-CM \n- dv-MV \n- dyo-SN \n- dz-BT \n- ebu-KE \n- ee-GH \n- ee-TG \n- el-CY \n- el-GR \n- en-001 \n- en-029 \n- en-150 \n- en-AG \n- en-AI \n- en-AS \n- en-AT \n- en-AU \n- en-BB \n- en-BE \n- en-BI \n- en-BM \n- en-BS \n- en-BW \n- en-BZ \n- en-CA \n- en-CC \n- en-CH \n- en-CK \n- en-CM \n- en-CX \n- en-CY \n- en-DE \n- en-DK \n- en-DM \n- en-ER \n- en-FI \n- en-FJ \n- en-FK \n- en-FM \n- en-GB \n- en-GD \n- en-GG \n- en-GH \n- en-GI \n- en-GM \n- en-GU \n- en-GY \n- en-HK \n- en-ID \n- en-IE \n- en-IL \n- en-IM \n- en-IN \n- en-IO \n- en-JE \n- en-JM \n- en-KE \n- en-KI \n- en-KN \n- en-KY \n- en-LC \n- en-LR \n- en-LS \n- en-MG \n- en-MH \n- en-MO \n- en-MP \n- en-MS \n- en-MT \n- en-MU \n- en-MW \n- en-MY \n- en-NA \n- en-NF \n- en-NG \n- en-NL \n- en-NR \n- en-NU \n- en-NZ \n- en-PG \n- en-PH \n- en-PK \n- en-PN \n- en-PR \n- en-PW \n- en-RW \n- en-SB \n- en-SC \n- en-SD \n- en-SE \n- en-SG \n- en-SH \n- en-SI \n- en-SL \n- en-SS \n- en-SX \n- en-SZ \n- en-TC \n- en-TK \n- en-TO \n- en-TT \n- en-TV \n- en-TZ \n- en-UG \n- en-UM \n- en-US \n- en-VC \n- en-VG \n- en-VI \n- en-VU \n- en-WS \n- en-ZA \n- en-ZM \n- en-ZW \n- eo-001 \n- es-419 \n- es-AR \n- es-BO \n- es-CL \n- es-CO \n- es-CR \n- es-CU \n- es-DO \n- es-EC \n- es-ES \n- es-GQ \n- es-GT \n- es-HN \n- es-MX \n- es-NI \n- es-PA \n- es-PE \n- es-PH \n- es-PR \n- es-PY \n- es-SV \n- es-US \n- es-UY \n- es-VE \n- et-EE \n- eu-ES \n- ewo-CM \n- fa-IR \n- ff-CM \n- ff-GN \n- ff-Latn-SN \n- ff-MR \n- ff-NG \n- fi-FI \n- fil-PH \n- fo-DK \n- fo-FO \n- fr-029 \n- fr-BE \n- fr-BF \n- fr-BI \n- fr-BJ \n- fr-BL \n- fr-CA \n- fr-CD \n- fr-CF \n- fr-CG \n- fr-CH \n- fr-CI \n- fr-CM \n- fr-DJ \n- fr-DZ \n- fr-FR \n- fr-GA \n- fr-GF \n- fr-GN \n- fr-GP \n- fr-GQ \n- fr-HT \n- fr-KM \n- fr-LU \n- fr-MA \n- fr-MC \n- fr-MF \n- fr-MG \n- fr-ML \n- fr-MQ \n- fr-MR \n- fr-MU \n- fr-NC \n- fr-NE \n- fr-PF \n- fr-PM \n- fr-RE \n- fr-RW \n- fr-SC \n- fr-SN \n- fr-SY \n- fr-TD \n- fr-TG \n- fr-TN \n- fr-VU \n- fr-WF \n- fr-YT \n- fur-IT \n- fy-NL \n- ga-IE \n- gd-GB \n- gl-ES \n- gn-PY \n- gsw-CH \n- gsw-FR \n- gsw-LI \n- gu-IN \n- guz-KE \n- gv-IM \n- ha-Latn-GH \n- ha-Latn-NE \n- ha-Latn-NG \n- haw-US \n- he-IL \n- hi-IN \n- hr-BA \n- hr-HR \n- hsb-DE \n- hu-HU \n- hy-AM \n- ia-001 \n- ia-FR \n- ibb-NG \n- id-ID \n- ig-NG \n- ii-CN \n- is-IS \n- it-CH \n- it-IT \n- it-SM \n- iu-Cans-CA \n- iu-Latn-CA \n- ja-JP \n- jgo-CM \n- jmc-TZ \n- jv-Java-ID \n- jv-Latn-ID \n- kab-DZ \n- ka-GE \n- kam-KE \n- kde-TZ \n- kea-CV \n- khq-ML \n- ki-KE \n- kkj-CM \n- kk-KZ \n- kl-GL \n- kln-KE \n- km-KH \n- kn-IN \n- kok-IN \n- ko-KP \n- ko-KR \n- kr-NG \n- ks-Arab-IN \n- ksb-TZ \n- ks-Deva-IN \n- ksf-CM \n- ksh-DE \n- ku-Arab-IQ \n- ku-Arab-IR \n- kw-GB \n- ky-KG \n- la-001 \n- lag-TZ \n- lb-LU \n- lg-UG \n- lkt-US \n- ln-AO \n- ln-CD \n- ln-CF \n- ln-CG \n- lo-LA \n- lrc-IQ \n- lrc-IR \n- lt-LT \n- lu-CD \n- luo-KE \n- luy-KE \n- lv-LV \n- mas-KE \n- mas-TZ \n- mer-KE \n- mfe-MU \n- mgh-MZ \n- mg-MG \n- mgo-CM \n- mi-NZ \n- mk-MK \n- ml-IN \n- mni-IN \n- mn-MN \n- mn-Mong-CN \n- mn-Mong-MN \n- moh-CA \n- mr-IN \n- ms-BN \n- ms-MY \n- ms-SG \n- mt-MT \n- mua-CM \n- my-MM \n- mzn-IR \n- naq-NA \n- nb-NO \n- nb-SJ \n- nd-ZW \n- ne-IN \n- ne-NP \n- nl-AW \n- nl-BE \n- nl-BQ \n- nl-CW \n- nl-NL \n- nl-SR \n- nl-SX \n- nmg-CM \n- nnh-CM \n- nn-NO \n- nqo-GN \n- nr-ZA \n- nso-ZA \n- nus-SS \n- nyn-UG \n- oc-FR \n- om-ET \n- om-KE \n- or-IN \n- os-GE \n- os-RU \n- pa-Arab-PK \n- pa-IN \n- pap-029 \n- pl-PL \n- prg-001 \n- prs-AF \n- ps-AF \n- pt-AO \n- pt-BR \n- pt-CV \n- pt-GW \n- pt-MO \n- pt-MZ \n- pt-PT \n- pt-ST \n- pt-TL \n- quc-Latn-GT \n- quz-BO \n- quz-EC \n- quz-PE \n- rm-CH \n- rn-BI \n- rof-TZ \n- ro-MD \n- ro-RO \n- ru-BY \n- ru-KG \n- ru-KZ \n- ru-MD \n- ru-RU \n- ru-UA \n- rwk-TZ \n- rw-RW \n- sah-RU \n- sa-IN \n- saq-KE \n- sbp-TZ \n- sd-Arab-PK \n- sd-Deva-IN \n- se-FI \n- seh-MZ \n- se-NO \n- se-SE \n- ses-ML \n- sg-CF \n- shi-Latn-MA \n- shi-Tfng-MA \n- si-LK \n- sk-SK \n- sl-SI \n- sma-NO \n- sma-SE \n- smj-NO \n- smj-SE \n- smn-FI \n- sms-FI \n- sn-Latn-ZW \n- so-DJ \n- so-ET \n- so-KE \n- so-SO \n- sq-AL \n- sq-MK \n- sq-XK \n- sr-Cyrl-BA \n- sr-Cyrl-ME \n- sr-Cyrl-RS \n- sr-Cyrl-XK \n- sr-Latn-BA \n- sr-Latn-ME \n- sr-Latn-RS \n- sr-Latn-XK \n- ss-SZ \n- ssy-ER \n- ss-ZA \n- st-LS \n- st-ZA \n- sv-AX \n- sv-FI \n- sv-SE \n- sw-CD \n- sw-KE \n- sw-TZ \n- sw-UG \n- syr-SY \n- ta-IN \n- ta-LK \n- ta-MY \n- ta-SG \n- te-IN \n- teo-KE \n- teo-UG \n- tg-Cyrl-TJ \n- th-TH \n- ti-ER \n- ti-ET \n- tig-ER \n- tk-TM \n- tn-BW \n- tn-ZA \n- to-TO \n- tr-CY \n- tr-TR \n- ts-ZA \n- tt-RU \n- twq-NE \n- tzm-Arab-MA \n- tzm-Latn-DZ \n- tzm-Latn-MA \n- tzm-Tfng-MA \n- ug-CN \n- uk-UA \n- ur-IN \n- ur-PK \n- uz-Arab-AF \n- uz-Cyrl-UZ \n- uz-Latn-UZ \n- vai-Latn-LR \n- vai-Vaii-LR \n- ve-ZA \n- vi-VN \n- vo-001 \n- vun-TZ \n- wae-CH \n- wal-ET \n- wo-SN \n- xh-ZA \n- xog-UG \n- yav-CM \n- yi-001 \n- yo-BJ \n- yo-NG \n- zgh-Tfng-MA \n- zh-CN \n- zh-Hans-HK \n- zh-Hans-MO \n- zh-HK \n- zh-MO \n- zh-SG \n- zh-TW \n- zu-ZA"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: defaultRoleId
        in: query
        description: 'An identifier for the role new users should be assigned by default. You can provide multiple instances of this parameter to specify multiple roles. For example: roleId=346&roleId=347&roleId=348. You can discover roles available to your API integration by using the GetUserRoles command. If this paramter is not supplied, the system default role will be used.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
      deprecated: false
  /DeleteOrganization/{id}:
    get:
      tags:
      - Organization Management
      summary: DeleteOrganization
      description: Allows you to delete an organization.
      operationId: DeleteOrganization
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The organization ID
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 5487
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateOrganization/{id}:
    get:
      tags:
      - Organization Management
      summary: UpdateOrganization
      description: Allows you to update an organization.
      operationId: UpdateOrganization
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The organization's LMS ID
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: name
        in: query
        description: The organization's name
        required: true
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: externalId
        in: query
        description: The organization's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: description
        in: query
        description: An optional description
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: parentId
        in: query
        description: The ID of the organization's parent organization. If not supplied, the current parent will be used.
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
          example: 7685
      - name: timeZoneId
        in: query
        description: "The time zone for the data object. If not specified, the timezone of the organization will be used.  \n\n**Allowed values**  \n  \nAfghanistan Standard Time  \nAlaskan Standard Time  \nAleutian Standard Time  \nAltai Standard Time  \nArab Standard Time  \nArabian Standard Time  \nArabic Standard Time  \nArgentina Standard Time  \nAstrakhan Standard Time  \nAtlantic Standard Time  \nAUS Central Standard Time  \nAus Central W. Standard Time  \nAUS Eastern Standard Time  \nAzerbaijan Standard Time  \nAzores Standard Time  \nBahia Standard Time  \nBangladesh Standard Time  \nBelarus Standard Time  \nBougainville Standard Time  \nCanada Central Standard Time  \nCape Verde Standard Time  \nCaucasus Standard Time  \nCen. Australia Standard Time  \nCentral America Standard Time  \nCentral Asia Standard Time  \nCentral Brazilian Standard Time  \nCentral Europe Standard Time  \nCentral European Standard Time  \nCentral Pacific Standard Time  \nCentral Standard Time  \nCentral Standard Time (Mexico)  \nChatham Islands Standard Time  \nChina Standard Time  \nCuba Standard Time  \nDateline Standard Time  \nE. Africa Standard Time  \nE. Australia Standard Time  \nE. Europe Standard Time  \nE. South America Standard Time  \nEaster Island Standard Time  \nEastern Standard Time  \nEastern Standard Time (Mexico)  \nEgypt Standard Time  \nEkaterinburg Standard Time  \nFiji Standard Time  \nFLE Standard Time  \nGeorgian Standard Time  \nGMT Standard Time  \nGreenland Standard Time  \nGreenwich Standard Time  \nGTB Standard Time  \nHaiti Standard Time  \nHawaiian Standard Time  \nIndia Standard Time  \nIran Standard Time  \nIsrael Standard Time  \nJordan Standard Time  \nKaliningrad Standard Time  \nKamchatka Standard Time  \nKorea Standard Time  \nLibya Standard Time  \nLine Islands Standard Time  \nLord Howe Standard Time  \nMagadan Standard Time  \nMagallanes Standard Time  \nMarquesas Standard Time  \nMauritius Standard Time  \nMid-Atlantic Standard Time  \nMiddle East Standard Time  \nMontevideo Standard Time  \nMorocco Standard Time  \nMountain Standard Time  \nMountain Standard Time (Mexico)  \nMyanmar Standard Time  \nN. Central Asia Standard Time  \nNamibia Standard Time  \nNepal Standard Time  \nNew Zealand Standard Time  \nNewfoundland Standard Time  \nNorfolk Standard Time  \nNorth Asia East Standard Time  \nNorth Asia Standard Time  \nNorth Korea Standard Time  \nOmsk Standard Time  \nPacific SA Standard Time  \nPacific Standard Time  \nPacific Standard Time (Mexico)  \nPakistan Standard Time  \nParaguay Standard Time  \nQyzylorda Standard Time  \nRomance Standard Time  \nRussia Time Zone 10  \nRussia Time Zone 11  \nRussia Time Zone 3  \nRussian Standard Time  \nSA Eastern Standard Time  \nSA Pacific Standard Time  \nSA Western Standard Time  \nSaint Pierre Standard Time  \nSakhalin Standard Time  \nSamoa Standard Time  \nSao Tome Standard Time  \nSaratov Standard Time  \nSE Asia Standard Time  \nSingapore Standard Time  \nSouth Africa Standard Time  \nSouth Sudan Standard Time  \nSri Lanka Standard Time  \nSudan Standard Time  \nSyria Standard Time  \nTaipei Standard Time  \nTasmania Standard Time  \nTocantins Standard Time  \nTokyo Standard Time  \nTomsk Standard Time  \nTonga Standard Time  \nTransbaikal Standard Time  \nTurkey Standard Time  \nTurks And Caicos Standard Time  \nUlaanbaatar Standard Time  \nUS Eastern Standard Time  \nUS Mountain Standard Time  \nUTC  \nUTC+12  \nUTC+13  \nUTC-02  \nUTC-08  \nUTC-09  \nUTC-11  \nVenezuela Standard Time  \nVladivostok Standard Time  \nVolgograd Standard Time  \nW. Australia Standard Time  \nW. Central Africa Standard Time  \nW. Europe Standard Time  \nW. Mongolia Standard Time  \nWest Asia Standard Time  \nWest Bank Standard Time  \nWest Pacific Standard Time  \nYakutsk Standard Time  \nYukon Standard Time"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: culture
        in: query
        description: "The default language/culture setting. This is used as a default when creating new users and events. If not specified, the culture of the parent organization will be used. \n\n Allowed Values \n\n \n- aa-DJ \n- aa-ER \n- aa-ET \n- af-NA \n- af-ZA \n- agq-CM \n- ak-GH \n- am-ET \n- ar-001 \n- ar-AE \n- ar-BH \n- ar-DJ \n- ar-DZ \n- ar-EG \n- ar-ER \n- ar-IL \n- ar-IQ \n- ar-JO \n- ar-KM \n- ar-KW \n- ar-LB \n- ar-LY \n- ar-MA \n- ar-MR \n- arn-CL \n- ar-OM \n- ar-PS \n- ar-QA \n- ar-SA \n- ar-SD \n- ar-SO \n- ar-SS \n- ar-SY \n- ar-TD \n- ar-TN \n- ar-YE \n- asa-TZ \n- as-IN \n- ast-ES \n- az-Cyrl-AZ \n- az-Latn-AZ \n- ba-RU \n- bas-CM \n- be-BY \n- bem-ZM \n- bez-TZ \n- bg-BG \n- bin-NG \n- bm-Latn-ML \n- bn-BD \n- bn-IN \n- bo-CN \n- bo-IN \n- br-FR \n- brx-IN \n- bs-Cyrl-BA \n- bs-Latn-BA \n- byn-ER \n- ca-AD \n- ca-ES \n- ca-ES-valencia \n- ca-FR \n- ca-IT \n- ce-RU \n- cgg-UG \n- chr-Cher-US \n- co-FR \n- cs-CZ \n- cu-RU \n- cy-GB \n- da-DK \n- da-GL \n- dav-KE \n- de-AT \n- de-BE \n- de-CH \n- de-DE \n- de-LI \n- de-LU \n- dje-NE \n- dsb-DE \n- dua-CM \n- dv-MV \n- dyo-SN \n- dz-BT \n- ebu-KE \n- ee-GH \n- ee-TG \n- el-CY \n- el-GR \n- en-001 \n- en-029 \n- en-150 \n- en-AG \n- en-AI \n- en-AS \n- en-AT \n- en-AU \n- en-BB \n- en-BE \n- en-BI \n- en-BM \n- en-BS \n- en-BW \n- en-BZ \n- en-CA \n- en-CC \n- en-CH \n- en-CK \n- en-CM \n- en-CX \n- en-CY \n- en-DE \n- en-DK \n- en-DM \n- en-ER \n- en-FI \n- en-FJ \n- en-FK \n- en-FM \n- en-GB \n- en-GD \n- en-GG \n- en-GH \n- en-GI \n- en-GM \n- en-GU \n- en-GY \n- en-HK \n- en-ID \n- en-IE \n- en-IL \n- en-IM \n- en-IN \n- en-IO \n- en-JE \n- en-JM \n- en-KE \n- en-KI \n- en-KN \n- en-KY \n- en-LC \n- en-LR \n- en-LS \n- en-MG \n- en-MH \n- en-MO \n- en-MP \n- en-MS \n- en-MT \n- en-MU \n- en-MW \n- en-MY \n- en-NA \n- en-NF \n- en-NG \n- en-NL \n- en-NR \n- en-NU \n- en-NZ \n- en-PG \n- en-PH \n- en-PK \n- en-PN \n- en-PR \n- en-PW \n- en-RW \n- en-SB \n- en-SC \n- en-SD \n- en-SE \n- en-SG \n- en-SH \n- en-SI \n- en-SL \n- en-SS \n- en-SX \n- en-SZ \n- en-TC \n- en-TK \n- en-TO \n- en-TT \n- en-TV \n- en-TZ \n- en-UG \n- en-UM \n- en-US \n- en-VC \n- en-VG \n- en-VI \n- en-VU \n- en-WS \n- en-ZA \n- en-ZM \n- en-ZW \n- eo-001 \n- es-419 \n- es-AR \n- es-BO \n- es-CL \n- es-CO \n- es-CR \n- es-CU \n- es-DO \n- es-EC \n- es-ES \n- es-GQ \n- es-GT \n- es-HN \n- es-MX \n- es-NI \n- es-PA \n- es-PE \n- es-PH \n- es-PR \n- es-PY \n- es-SV \n- es-US \n- es-UY \n- es-VE \n- et-EE \n- eu-ES \n- ewo-CM \n- fa-IR \n- ff-CM \n- ff-GN \n- ff-Latn-SN \n- ff-MR \n- ff-NG \n- fi-FI \n- fil-PH \n- fo-DK \n- fo-FO \n- fr-029 \n- fr-BE \n- fr-BF \n- fr-BI \n- fr-BJ \n- fr-BL \n- fr-CA \n- fr-CD \n- fr-CF \n- fr-CG \n- fr-CH \n- fr-CI \n- fr-CM \n- fr-DJ \n- fr-DZ \n- fr-FR \n- fr-GA \n- fr-GF \n- fr-GN \n- fr-GP \n- fr-GQ \n- fr-HT \n- fr-KM \n- fr-LU \n- fr-MA \n- fr-MC \n- fr-MF \n- fr-MG \n- fr-ML \n- fr-MQ \n- fr-MR \n- fr-MU \n- fr-NC \n- fr-NE \n- fr-PF \n- fr-PM \n- fr-RE \n- fr-RW \n- fr-SC \n- fr-SN \n- fr-SY \n- fr-TD \n- fr-TG \n- fr-TN \n- fr-VU \n- fr-WF \n- fr-YT \n- fur-IT \n- fy-NL \n- ga-IE \n- gd-GB \n- gl-ES \n- gn-PY \n- gsw-CH \n- gsw-FR \n- gsw-LI \n- gu-IN \n- guz-KE \n- gv-IM \n- ha-Latn-GH \n- ha-Latn-NE \n- ha-Latn-NG \n- haw-US \n- he-IL \n- hi-IN \n- hr-BA \n- hr-HR \n- hsb-DE \n- hu-HU \n- hy-AM \n- ia-001 \n- ia-FR \n- ibb-NG \n- id-ID \n- ig-NG \n- ii-CN \n- is-IS \n- it-CH \n- it-IT \n- it-SM \n- iu-Cans-CA \n- iu-Latn-CA \n- ja-JP \n- jgo-CM \n- jmc-TZ \n- jv-Java-ID \n- jv-Latn-ID \n- kab-DZ \n- ka-GE \n- kam-KE \n- kde-TZ \n- kea-CV \n- khq-ML \n- ki-KE \n- kkj-CM \n- kk-KZ \n- kl-GL \n- kln-KE \n- km-KH \n- kn-IN \n- kok-IN \n- ko-KP \n- ko-KR \n- kr-NG \n- ks-Arab-IN \n- ksb-TZ \n- ks-Deva-IN \n- ksf-CM \n- ksh-DE \n- ku-Arab-IQ \n- ku-Arab-IR \n- kw-GB \n- ky-KG \n- la-001 \n- lag-TZ \n- lb-LU \n- lg-UG \n- lkt-US \n- ln-AO \n- ln-CD \n- ln-CF \n- ln-CG \n- lo-LA \n- lrc-IQ \n- lrc-IR \n- lt-LT \n- lu-CD \n- luo-KE \n- luy-KE \n- lv-LV \n- mas-KE \n- mas-TZ \n- mer-KE \n- mfe-MU \n- mgh-MZ \n- mg-MG \n- mgo-CM \n- mi-NZ \n- mk-MK \n- ml-IN \n- mni-IN \n- mn-MN \n- mn-Mong-CN \n- mn-Mong-MN \n- moh-CA \n- mr-IN \n- ms-BN \n- ms-MY \n- ms-SG \n- mt-MT \n- mua-CM \n- my-MM \n- mzn-IR \n- naq-NA \n- nb-NO \n- nb-SJ \n- nd-ZW \n- ne-IN \n- ne-NP \n- nl-AW \n- nl-BE \n- nl-BQ \n- nl-CW \n- nl-NL \n- nl-SR \n- nl-SX \n- nmg-CM \n- nnh-CM \n- nn-NO \n- nqo-GN \n- nr-ZA \n- nso-ZA \n- nus-SS \n- nyn-UG \n- oc-FR \n- om-ET \n- om-KE \n- or-IN \n- os-GE \n- os-RU \n- pa-Arab-PK \n- pa-IN \n- pap-029 \n- pl-PL \n- prg-001 \n- prs-AF \n- ps-AF \n- pt-AO \n- pt-BR \n- pt-CV \n- pt-GW \n- pt-MO \n- pt-MZ \n- pt-PT \n- pt-ST \n- pt-TL \n- quc-Latn-GT \n- quz-BO \n- quz-EC \n- quz-PE \n- rm-CH \n- rn-BI \n- rof-TZ \n- ro-MD \n- ro-RO \n- ru-BY \n- ru-KG \n- ru-KZ \n- ru-MD \n- ru-RU \n- ru-UA \n- rwk-TZ \n- rw-RW \n- sah-RU \n- sa-IN \n- saq-KE \n- sbp-TZ \n- sd-Arab-PK \n- sd-Deva-IN \n- se-FI \n- seh-MZ \n- se-NO \n- se-SE \n- ses-ML \n- sg-CF \n- shi-Latn-MA \n- shi-Tfng-MA \n- si-LK \n- sk-SK \n- sl-SI \n- sma-NO \n- sma-SE \n- smj-NO \n- smj-SE \n- smn-FI \n- sms-FI \n- sn-Latn-ZW \n- so-DJ \n- so-ET \n- so-KE \n- so-SO \n- sq-AL \n- sq-MK \n- sq-XK \n- sr-Cyrl-BA \n- sr-Cyrl-ME \n- sr-Cyrl-RS \n- sr-Cyrl-XK \n- sr-Latn-BA \n- sr-Latn-ME \n- sr-Latn-RS \n- sr-Latn-XK \n- ss-SZ \n- ssy-ER \n- ss-ZA \n- st-LS \n- st-ZA \n- sv-AX \n- sv-FI \n- sv-SE \n- sw-CD \n- sw-KE \n- sw-TZ \n- sw-UG \n- syr-SY \n- ta-IN \n- ta-LK \n- ta-MY \n- ta-SG \n- te-IN \n- teo-KE \n- teo-UG \n- tg-Cyrl-TJ \n- th-TH \n- ti-ER \n- ti-ET \n- tig-ER \n- tk-TM \n- tn-BW \n- tn-ZA \n- to-TO \n- tr-CY \n- tr-TR \n- ts-ZA \n- tt-RU \n- twq-NE \n- tzm-Arab-MA \n- tzm-Latn-DZ \n- tzm-Latn-MA \n- tzm-Tfng-MA \n- ug-CN \n- uk-UA \n- ur-IN \n- ur-PK \n- uz-Arab-AF \n- uz-Cyrl-UZ \n- uz-Latn-UZ \n- vai-Latn-LR \n- vai-Vaii-LR \n- ve-ZA \n- vi-VN \n- vo-001 \n- vun-TZ \n- wae-CH \n- wal-ET \n- wo-SN \n- xh-ZA \n- xog-UG \n- yav-CM \n- yi-001 \n- yo-BJ \n- yo-NG \n- zgh-Tfng-MA \n- zh-CN \n- zh-Hans-HK \n- zh-Hans-MO \n- zh-HK \n- zh-MO \n- zh-SG \n- zh-TW \n- zu-ZA"
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /SearchCourses:
    get:
      tags:
      - Course Management
      summary: SearchCourses
      description: Allows you to search for courses.
      operationId: SearchCourses
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "he value you want to sort by. If not supplied, a default value of \"Name\" will be used. You can append \" DESC\" after the sort value to sort descending. For example, \"Name DESC\" would sort by name in descending order. Possible values: \n- Name \n- Organization \n- ContentProvider \n- AvailableInstructorLed \n- AvailableSelfPaced"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: n optional parameter used to filter for courses by name. When specified, only courses that have names that contain or match the this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: externalId
        in: query
        description: An optional parameter used to filter for courses by external ID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: hasLabs
        in: query
        description: An optional parameter used to filter for courses that contain labs. If true is passed, only courses with labs are returned. If false is passed, only courses without labs are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: createdAfter
        in: query
        description: An optional parameter used to filter for courses created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdBefore
        in: query
        description: An optional parameter used to filter for courses created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastModifiedAfter
        in: query
        description: An optional parameter used to filter for courses modified after a specified date. When used in conjunction with the "lastModifiedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastModifiedBefore
        in: query
        description: An optional parameter used to filter for courses modified before a specified date. When used in conjunction with the "lastModifiedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: availableInstructorLed
        in: query
        description: An optional parameter used to filter for courses that are available instructor-led. If true is passed, only courses that are avaialble instructor-led are returned. If false is passed, only courses that are not available instructor-led are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: availableSelfPaced
        in: query
        description: An optional parameter used to filter for courses that are available self-paced. If true is passed, only courses that are avaialble self-paced are returned. If false is passed, only courses that are not available self-paced are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseResponse'
      deprecated: false
  /GetCourse/{id}:
    get:
      tags:
      - Course Management
      summary: GetCourse
      description: Allows you to get information about a course.
      operationId: GetCourse
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the course to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 34556
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
      deprecated: false
  /GetCourseByExternalId/{id}:
    get:
      tags:
      - Course Management
      summary: GetCourseByExternalId
      description: Allows you to get information about a course by providing a unique identifier from your external system.
      operationId: GetCourseByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the course to retrieve.
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseResponse'
      deprecated: false
  /SearchCourseTagGroups:
    get:
      tags:
      - Course Management
      summary: SearchCourseTagGroups
      description: Allows you to search for course tag groups.
      operationId: SearchCourseTagGroups
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by. If not supplied, a default value of \"Name\" will be assumed. You can append \" DESC\" after the sort value to sort descending. For example, \"Name DESC\" would sort by name time in descending order. Possible values: \n- Name"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: An optional parameter used to filter for course tag groups by name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseTagGroupResponse'
      deprecated: false
  /SearchCourseFeedback:
    get:
      tags:
      - Course Management
      summary: SearchCourseFeedback
      description: Allows you to search for course feedback.
      operationId: SearchCourseFeedback
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "he value you want to sort by. If not supplied, a default value of \"Created\" will be used. You can append \" DESC\" after the sort value to sort descending. For example, \"Created DESC\" would sort by created date in descending order. Possible values:\n- Created \n- Title \n- Content \n- Positive \n- Negative \n- User \n- CoruseAssignment \n- Course \n- Class \n- ClassEnrollment \n- Activity \n- ActivityType"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: courseId
        in: query
        description: An optional parameter used to filter for a course by Id. When specified, only feedback entries for the specified course will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 67785
      - name: name
        in: query
        description: An optional parameter used to filter for courses by name. When specified, only feedback entries for courses that have names that contain or match the this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdAfter
        in: query
        description: An optional parameter used to filter for feedback entries created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          nullable: true
          example: 1492203295
      - name: createdBefore
        in: query
        description: An optional parameter used to filter for feedback entries created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          nullable: true
          example: 1492203295
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseFeedbackReponse'
      deprecated: false
  /GetClassEnrollment/{id}:
    get:
      tags:
      - Class Enrollment Management
      summary: GetClassEnrollment
      description: Allows you to get basic information about a class enrollment.
      operationId: GetClassEnrollment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the class enrollment to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentResponse'
      deprecated: false
  /GetClassEnrollmentByClassAndUser:
    get:
      tags:
      - Class Enrollment Management
      summary: GetClassEnrollmentByClassAndUser
      description: Allows you to get information about a class enrollment by providing class and user identifiers.
      operationId: GetClassEnrollmentByClassAndUser
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: classId
        in: query
        description: The ID of the class the enrollment to retrieve is for
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 445632
      - name: userId
        in: query
        description: The ID of the user the enrollment to retrieve is for
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 67856
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentResponse'
      deprecated: false
  /GetClassEnrollmentByExternalId:
    get:
      tags:
      - Class Enrollment Management
      summary: GetClassEnrollmentByExternalId
      description: Allows you to get information about a class enrollment by providing a unique identifier from your external system.
      operationId: GetClassEnrollmentByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The external ID of the class enrollment to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentResponse'
      deprecated: false
  /CreateClassEnrollment:
    get:
      tags:
      - Class Enrollment Management
      summary: CreateClassEnrollment
      description: Allows you to create a class enrollment.
      operationId: CreateClassEnrollment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: externalId
        in: query
        description: The exernal ID of the class enrollment, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: classId
        in: query
        description: The Id of the related class
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: userId
        in: query
        description: The Id of the related user
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: enrollmentStatusId
        in: query
        description: "Indicates the status of the class enrollment \n- 0 = Request \n- 10 = Cancel \n- 20 = Waitlist \n- 30 = Approve \n- 40 = Deny \n- 50 = Audit \n- 60 = Enroll"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: completionStatusId
        in: query
        description: "Indicates the completion status of the class enrollment \n- 0 = Unknown \n- 10 = Attending \n- 20 = Complete \n- 30 = Incomplete \n- 40 = NoShow \n- 50 = Failed"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: lateCancel
        in: query
        description: Indicates if the class enrollment was cancelled outside the late cancellation window
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: retake
        in: query
        description: Indicates if the class enrollment is a retake
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: LocationTypeId
        in: query
        description: "Indicates the location type that the student is assigned to attend the class \n- 0 = To Be Determined \n- 10 = Classroom \n- 20 = Remote Classroom \n- 30 = Virtual"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: ClassroomId
        in: query
        description: The ID of the classroom (if any) in which the student is assigned to attend the class
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: HoursSpent
        in: query
        description: The hours spent by the student in the class enrollment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: Grade
        in: query
        description: The grade the student received for the class enrollment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClassEnrollmentResponse'
      deprecated: false
  /DeleteClassEnrollment/{id}:
    get:
      tags:
      - Class Enrollment Management
      summary: DeleteClassEnrollment
      description: Allows you to delete a class enrollment.
      operationId: DeleteClassEnrollment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the class enrollment to delete
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 45632
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateClassEnrollment/{id}:
    get:
      tags:
      - Class Enrollment Management
      summary: UpdateClassEnrollment
      description: Allows you to update a class enrollment.
      operationId: UpdateClassEnrollment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the class enrollment.
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 45632
      - name: externalId
        in: query
        description: The exernal ID of the class enrollment, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: classId
        in: query
        description: The Id of the related class
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: userId
        in: query
        description: The Id of the related user
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: enrollmentStatusId
        in: query
        description: "Indicates the status of the class enrollment \n- 0 = Request \n- 10 = Cancel \n- 20 = Waitlist \n- 30 = Approve \n- 40 = Deny \n- 50 = Audit \n- 60 = Enroll"
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: completionStatusId
        in: query
        description: "Indicates the completion status of the class enrollment \n- 0 = Unknown \n- 10 = Attending \n- 20 = Complete \n- 30 = Incomplete \n- 40 = NoShow \n- 50 = Failed"
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: lateCancel
        in: query
        description: Indicates if the class enrollment was cancelled outside the late cancellation window
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: retake
        in: query
        description: Indicates if the class enrollment is a retake
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: LocationTypeId
        in: query
        description: "Indicates the location type that the student is assigned to attend the class \n- 0 = To Be Determined \n- 10 = Classroom \n- 20 = Remote Classroom \n- 30 = Virtual"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: ClassroomId
        in: query
        description: The ID of the classroom (if any) in which the student is assigned to attend the class
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: HoursSpent
        in: query
        description: The hours spent by the student in the class enrollment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: Grade
        in: query
        description: The grade the student received for the class enrollment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /SearchClassEnrollments:
    get:
      tags:
      - Class Enrollment Management
      summary: SearchClassEnrollments
      description: Allows you to search for a class enrollment.
      operationId: SearchClassEnrollments
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "TThe value you want to sort by. If not supplied, a default value of \"Name\" will be used. You can append \" DESC\" after the sort value to sort descending. For example, \"Name DESC\" would sort by name in descending order. Possible values:\n- Name \n- Program \n- CompanyOrganization \n- Owner \n- Club \n- Company \n- Starts \n- Expires \n- Size \n- Used \n- Created \n- LastModified"
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: className
        in: query
        description: An optional parameter used to filter for class enrollments by class name. When specified, only class enrollments that have names that contain or match this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: studentId
        in: query
        description: An optional parameter used to filter for class enrollments by the associated student's ID. When specified, only class enrollments that have an associated student with that Id will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: createdAfter
        in: query
        description: An optional parameter used to filter for class enrollments created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: createdBefore
        in: query
        description: An optional parameter used to filter for class enrollments created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassEnrollmentSearchResponse'
      deprecated: false
  /GetCourseAssignment/{id}:
    get:
      tags:
      - Course Assignment Management
      summary: GetCourseAssignment
      description: Allows you to get information about a course assignment.
      operationId: GetCourseAssignment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the course assignment to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 1234
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseAssignmentResponse'
      deprecated: false
  /GetCourseAssignmentByExternalId/{id}:
    get:
      tags:
      - Course Assignment Management
      summary: GetCourseAssignmentByExternalId
      description: Allows you to get information about a course assignment by providing a unique identifier from your external system.
      operationId: GetCourseAssignmentByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The external ID of the course assignment to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseAssignmentResponse'
      deprecated: false
  /CreateCourseAssignment:
    get:
      tags:
      - Course Assignment Management
      summary: CreateCourseAssignment
      description: Allows you to create a course assignment.
      operationId: CreateCourseAssignment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ExternalId
        in: query
        description: The course assignment's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: E3G5YZFREFEQ9371
      - name: CourseId
        in: query
        description: The Id of the course associated with this course assignment
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
          example: 321
      - name: UserId
        in: query
        description: The UserId of the user that is associated with this course assignment
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
          example: 44534
      - name: ClubMembershipId
        in: query
        description: The subscription (if any) associated with this course assignment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1234
      - name: Expires
        in: query
        description: 'When the course assignment expires (if ever) (as a date string in format yyyy-MM-dd ex: 2025-12-04)'
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2025-12-04
      - name: TargetCompletionDate
        in: query
        description: 'When course assignment is expected to be completed by the student (as a date string in format yyyy-MM-dd ex: 2025-12-04)'
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2025-12-04
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourseAssignmentResponse'
      deprecated: false
  /DeleteCourseAssignment/{id}:
    get:
      tags:
      - Course Assignment Management
      summary: DeleteCourseAssignment
      description: Allows you to delete a course assignment.
      operationId: DeleteCourseAssignment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the course assignment to delete
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateCourseAssignment:
    get:
      tags:
      - Course Assignment Management
      summary: UpdateCourseAssignment
      description: Allows you to update a course assignment.
      operationId: UpdateCourseAssignment
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: CourseAssignmentId
        in: query
        description: The ID of the course assignment
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: ExternalId
        in: query
        description: The course assignment's external ID, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: E3G5YZFREFEQ9371
      - name: CourseId
        in: query
        description: The Id of the course associated with this course assignment
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: UserId
        in: query
        description: The UserId of the user that is associated with this course assignment
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: ClubMembershipId
        in: query
        description: The subscription (if any) associated with this course assignment
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: Expires
        in: query
        description: When the course assignment expires (if ever) (in a string representation of the date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2020-02-26
      - name: TargetCompletionDate
        in: query
        description: When course assignment is expected to be completed by the student (in a string representation of the date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2020-02-26
      - name: Started
        in: query
        description: When the course assignment was started (if ever) (in a string representation of the date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2020-02-26
      - name: Completed
        in: query
        description: When the course assignment was completed (if ever) (in a string representation of the date)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
          example: 2020-02-26
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourseAssignmentResponse'
      deprecated: false
  /SearchCourseAssignments:
    get:
      tags:
      - Course Assignment Management
      summary: SearchCourseAssignments
      description: Allows you to search for course assignments.
      operationId: SearchCourseAssignments
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: The value you want to sort by
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: An optional parameter used to filter for course assignments for a particular user
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for course assignments for a particular user using an external identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: courseId
        in: query
        description: An optional parameter used to filter for course assignments for a particular course
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: completionStatus
        in: query
        description: "An optional parameter used to filter for course assignments with a particular completion status. Possible values:\n- 0 = Not Started \n- 10 = Incomplete \n- 20 = Not Started or Incomplete \n- 30 = Complete"
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: createdAfter
        in: query
        description: An optional parameter used to filter for course assignments created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: createdBefore
        in: query
        description: An optional parameter used to filter for course assignments created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: expiresAfter
        in: query
        description: An optional parameter used to filter for course assignments that expire after a specified date. When used in conjunction with the "expiresBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: expiresBefore
        in: query
        description: An optional parameter used to filter for course assignments that expire before a specified date. When used in conjunction with the "expiresAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: startedAfter
        in: query
        description: An optional parameter used to filter for course assignments started after a specified date. When used in conjunction with the "startedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: startedBefore
        in: query
        description: An optional parameter used to filter for course assignments started before a specified date. When used in conjunction with the "startedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: completedAfter
        in: query
        description: An optional parameter used to filter for course assignments completed after a specified date. When used in conjunction with the "completedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      - name: completedBefore
        in: query
        description: An optional parameter used to filter for course assignments completed before a specified date. When used in conjunction with the "completedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1318025880
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseAssignmentsResponse'
      deprecated: false
  /SearchCourseCatalogSearchHistory:
    get:
      tags:
      - Searching
      summary: SearchCourseCatalogSearchHistory
      description: Allows you to search course catalog search history records.
      operationId: SearchCourseCatalogSearchHistory
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by. If not supplied, a default value of \"SearchTime DESC\" will be assumed. You can append \" DESC\" after the sort value to sort descending. For example, \"SearchTime DESC\" would sort by when the search was run in descending order. \n\nPossible values:\n- SearchTime\n- LastName"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: SearchTime
      - name: userId
        in: query
        description: An optional parameter used to filter for searches run by a particular user.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 4325
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for searches run by a particular user using an external identifier.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 89CFAB18-443D-495C-89B0-95A85E0A00BA
      - name: searchedAfter
        in: query
        description: An optional parameter used to filter for searches run after a specified date. When used in conjunction with the "searchedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1466092675
      - name: searchedBefore
        in: query
        description: An optional parameter used to filter for searches run before a specified date. When used in conjunction with the "searchedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1466092675
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseCatalogSearchHistoryResponse'
      deprecated: false
  /SearchLabInstances:
    get:
      tags:
      - Searching
      summary: SearchLabInstances
      description: Allows you to search for lab instances.
      operationId: SearchLabInstances
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: |-
          The value you want to sort by. If not supplied, a default value of "StartTime DESC" will be assumed. You can append " DESC" after the sort value to sort descending. For example, "StartTime DESC" would sort by when the lab instance was started in descending order. Possible values:
          - StartTime
          - EndTime
          - LastName
          - Lab
          - TotalRunTime
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: StartTime DESC
      - name: userId
        in: query
        description: An optional parameter used to filter for lab instances run by a particular user
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 678910
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for lab instances for a particular user using an external identifier
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 56564
      - name: labId
        in: query
        description: An optional parameter used to filter for instances of a particular lab
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 5767784
      - name: courseId
        in: query
        description: An optional parameter used to filter for lab instances launched from a particular course
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 56765
      - name: completionStatus
        in: query
        description: |-
          ilters for lab instances with a particular completion status. Possible values:
          - 0 = Cancelled
          - 10 = In progress
          - 30 = Complete
          - 40 = Error
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      - name: startedAfter
        in: query
        description: An optional parameter used to filter for lab instances started after a specified date. When used in conjunction with the "startedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      - name: startedBefore
        in: query
        description: An optional parameter used to filter for lab instances started before a specified date. When used in conjunction with the "startedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      - name: endedAfter
        in: query
        description: An optional parameter used to filter for lab instances ended after a specified date. When used in conjunction with the "endedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      - name: endedBefore
        in: query
        description: An optional parameter used to filter for lab instances ended before a specified date. When used in conjunction with the "endedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      - name: lastActivityTimeAfter
        in: query
        description: An optional parameter used to filter for lab instances who's last activity time is after a specified date. When used in conjunction with the "lastActivityTimeBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      - name: lastActivityTimeBefore
        in: query
        description: An optional parameter used to filter for lab instances who's last activity time is before a specified date. When used in conjunction with the "lastActivityTimeAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1585690845
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchLabInstancesResponse'
      deprecated: false
  /SearchCourseExternalActivityLaunches:
    get:
      tags:
      - Searching
      summary: SearchCourseExternalActivityLaunches
      description: Allows you to search external course activity launches (videos, documents, etc.).
      operationId: SearchCourseExternalActivityLaunches
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by. If not supplied, a default value of \"LaunchTime DESC\" will be assumed. You can append \" DESC\" after the sort value to sort descending. For example, \"LaunchTime DESC\" would sort by when the activity was launched in descending order. Possible values:  \n- LaunchTime\n- LastName\n- Course\n- Activity"
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: LaunchTime DESC
      - name: userId
        in: query
        description: An optional parameter used to filter for launches made by a particular user.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 545656
      - name: userExternalId
        in: query
        description: An optional parameter used to filter for launches made by a particular user using an external identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 1563D8AE-8F56-4C16-B64E-5701D221E832
      - name: courseId
        in: query
        description: An optional parameter used to filter for launches from a particular course.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 456576
      - name: activityType
        in: query
        description: |-
          Filters for activities of a particular type:
          - 40 = URL
          - 60 = Video
          - 70 = Document.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 60
      - name: launchedAfter
        in: query
        description: An optional parameter used to filter for activities launched after a specified date. When used in conjunction with the "launchedBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1465663291
      - name: launchedBefore
        in: query
        description: An optional parameter used to filter for activities launched before a specified date. When used in conjunction with the "launchedAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1465663291
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCourseExternalActivityLaunchesResponse'
      deprecated: false
  /GetClass/{id}:
    get:
      tags:
      - Class Management
      summary: GetClass
      description: Allows you to get information about a class.
      operationId: GetClass
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the class to retrieve
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 10
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
      deprecated: false
  /GetClassByClassTrainingKey:
    get:
      tags:
      - Class Management
      summary: GetClassByClassTrainingKey
      description: Allows you to get information about a class using the class training key.
      operationId: GetClassByClassTrainingKey
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The external ID of the class to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: E3G5YZFREFEQ9371
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
      deprecated: false
  /GetClassByExternalId:
    get:
      tags:
      - Class Management
      summary: GetClassByExternalId
      description: Allows you to get information about a class by providing a unique identifier from your external system.
      operationId: GetClassByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The external ID of the class to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: E3G5YZFREFEQ9371
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassResponse'
      deprecated: false
  /CreateClass:
    get:
      tags:
      - Class Management
      summary: CreateClass
      description: Allows you to create a class.
      operationId: CreateClass
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: CourseId
        in: query
        description: The internal Id of the course the class is based on
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1234
      - name: Name
        in: query
        description: The name of the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Sample class name
      - name: Description
        in: query
        description: A short description of the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Sample description of class
      - name: HtlmDescription
        in: query
        description: A description of the class in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ConfirmationStatusId
        in: query
        description: |-
          The confirmation status of the class. If blank it will default to 0. Available statuses and their values are as follows:
          - Scheduled = 0
          - Guaranteed To Run = 1
          - Cancelled = 2
          - Rescheduled = 3
          - Tentative = 4
          - Requested = 5
          - Denied = 6
          - Completed = 7
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 2344
      - name: OrganizationId
        in: query
        description: The internal Id of the Organization that is running the class. If blank it will default to the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 3232
      - name: CompanyId
        in: query
        description: The internal company Id if this class is to be dedicated to a specific company
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: DeliveryTypeId
        in: query
        description: |-
          The delivery type of the class. If blank, it will default to Physical unless other values are set to conflict with that setting. If set to Physical any virtual meeting host settings will be lost. Available delivery types are as follows:
          - Physical = 1
          - Virtual = 2
          - Mixed = 3
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 5454
      - name: VirtualMeetingHostId
        in: query
        description: The internal Id of the virtual meeting host to use if a class is to be run virtually
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: CustomVirtualClassroomUrl
        in: query
        description: The url of the custom virtual classroom used for the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: PrimaryInstructorId
        in: query
        description: The internal user id of the instructor for the class
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: PrimaryClassroomId
        in: query
        description: The internal id of the classroom that this class will take place in
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: TimeZoneId
        in: query
        description: The .NET system timezone id that the class will be delivered in. If blank it will default to the organizations timezone setting. To get a complete list of supported timezones please use tzutil as timezones are constantly changing.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: MinStudents
        in: query
        description: The minimum student enrollments for the class to be run. If blank this value will default to the setting at the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: MaxStudents
        in: query
        description: The maximum student enrollments allowed for the class. If blank this value will default to either the course or API Consumer settings.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 6
      - name: AllowSelfEnrollment
        in: query
        description: Sets this class to allow students to self-enroll
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: IsPublic
        in: query
        description: This sets if this class will be displayed on the Public Schedule
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      - name: DisableLabs
        in: query
        description: This sets if you would like to disable lab access for this class
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: SurveyId
        in: query
        description: The internal id of the student survey to associate with this class. If blank this value will default to the settings at the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: StudentSurveyAvailabilityStartTypeId
        in: query
        description: |-
          The setting for when the students should begin to see that the survey is available to them. The following options are available:
          - Hours Before Event Ends = 0
          - Hours After Event Begins = 1
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SurveyAvailabilityStartHours
        in: query
        description: The number of hours (either before the event ends, or after the event begins, depending on the setting of StudentSurveyAvailabilityStartTypeId) for when the student survey will become available. If blank it will default to the default settings of the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SurveyAvailabilityEndDays
        in: query
        description: The number of days that the student survey will be available to students after the event ends. If blank it will default to the default settings of the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: InstructorSurveyId
        in: query
        description: The internal id of the survey to present to instructors of the class. If blank it will default to the default settings of the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrganizationSurveyId
        in: query
        description: The internal id of the organization survey for the class. If blank it will default to the default settings of the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ExternalId
        in: query
        description: The class's external ID, usually a unique identifier from the calling system.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ClassMeetings
        in: query
        description: A collection of ClassMeetings in JSON format.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ClassMeeting'
      - name: AvailableToOrganizationIds
        in: query
        description: A comma separated list of int organization Ids that this class should be available to.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123,4556,221
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClassResponse'
      deprecated: false
  /UpdateClass/{id}:
    get:
      tags:
      - Class Management
      summary: UpdateClass
      description: Allows you to update a class.
      operationId: UpdateClass
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: path
        description: The ID of the class to retrieve.
        required: true
        style: simple
        explode: true
        schema:
          type: integer
          format: int32
          example: 202783
      - name: Name
        in: query
        description: The name of the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Sample class name
      - name: Description
        in: query
        description: A short description of the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: Sample description of class
      - name: HtlmDescription
        in: query
        description: A description of the class in HTML
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ConfirmationStatusId
        in: query
        description: |-
          The confirmation status of the class. If blank it will default to 0. Available statuses and their values are as follows:
          - Scheduled = 0
          - Guaranteed To Run = 1
          - Cancelled = 2
          - Rescheduled = 3
          - Tentative = 4
          - Requested = 5
          - Denied = 6
          - Completed = 7
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 2344
      - name: OrganizationId
        in: query
        description: The internal Id of the Organization that is running the class. If blank it will default to the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 3232
      - name: CompanyId
        in: query
        description: The internal company Id if this class is to be dedicated to a specific company
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: DeliveryTypeId
        in: query
        description: |-
          The delivery type of the class. If blank, it will default to Physical unless other values are set to conflict with that setting. If set to Physical any virtual meeting host settings will be lost. Available delivery types are as follows:
          - Physical = 1
          - Virtual = 2
          - Mixed = 3
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 5454
      - name: VirtualMeetingHostId
        in: query
        description: The internal Id of the virtual meeting host to use if a class is to be run virtually
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: CustomVirtualClassroomUrl
        in: query
        description: The url of the custom virtual classroom used for the class
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: PrimaryInstructorId
        in: query
        description: The internal user id of the instructor for the class
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: PrimaryClassroomId
        in: query
        description: The internal id of the classroom that this class will take place in
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: TimeZoneId
        in: query
        description: The .NET system timezone id that the class will be delivered in. If blank it will default to the organizations timezone setting. To get a complete list of supported timezones please use tzutil as timezones are constantly changing.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: MinStudents
        in: query
        description: The minimum student enrollments for the class to be run. If blank this value will default to the setting at the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: MaxStudents
        in: query
        description: The maximum student enrollments allowed for the class. If blank this value will default to either the course or API Consumer settings.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 6
      - name: AllowSelfEnrollment
        in: query
        description: Sets this class to allow students to self-enroll
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: IsPublic
        in: query
        description: This sets if this class will be displayed on the Public Schedule
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      - name: DisableLabs
        in: query
        description: This sets if you would like to disable lab access for this class
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: SurveyId
        in: query
        description: The internal id of the student survey to associate with this class. If blank this value will default to the settings at the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: StudentSurveyAvailabilityStartTypeId
        in: query
        description: |-
          The setting for when the students should begin to see that the survey is available to them. The following options are available:
          - Hours Before Event Ends = 0
          - Hours After Event Begins = 1
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SurveyAvailabilityStartHours
        in: query
        description: The number of hours (either before the event ends, or after the event begins, depending on the setting of StudentSurveyAvailabilityStartTypeId) for when the student survey will become available. If blank it will default to the default settings of the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: SurveyAvailabilityEndDays
        in: query
        description: The number of days that the student survey will be available to students after the event ends. If blank it will default to the default settings of the API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: InstructorSurveyId
        in: query
        description: The internal id of the survey to present to instructors of the class. If blank it will default to the default settings of the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrganizationSurveyId
        in: query
        description: The internal id of the organization survey for the class. If blank it will default to the default settings of the course or API Consumer.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ExternalId
        in: query
        description: The class's external ID, usually a unique identifier from the calling system.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: ClassMeetings
        in: query
        description: A collection of ClassMeetings in JSON format.
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ClassMeeting'
      - name: AvailableToOrganizationIds
        in: query
        description: A comma separated list of int organization Ids that this class should be available to.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: 123,4556,221
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /SearchClasses:
    get:
      tags:
      - Class Management
      summary: SearchClasses
      description: Allows you to search for classes belonging to your organization.
      operationId: SearchClasses
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: |-
          The value you want to sort by. If not supplied, a default value of "Start" will be used. You can append " DESC" after the sort value to sort descending. For example, "Start DESC" would sort by class start time in descending order. Possible values:
          - Name
          - Course
          - ConfirmationStatus
          - Start
          - End
          - Organization
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: An optional parameter used to filter for classes by name. When specified, only classes that have names that contain or match the this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: courseId
        in: query
        description: An optional parameter used to filter for classes for a particular course.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 3445
      - name: startsAfter
        in: query
        description: An optional parameter used to filter for classes that start after a specified date. When used in conjunction with the "startsBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1449874800
      - name: startsBefore
        in: query
        description: An optional parameter used to filter for classes that start before a specified date. When used in conjunction with the "startsAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1449874800
      - name: endsAfter
        in: query
        description: An optional parameter used to filter for classes that end after a specified date. When used in conjunction with the "endsBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1449874800
      - name: endsBefore
        in: query
        description: An optional parameter used to filter for classes that end before a specified date. When used in conjunction with the "endsAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 1449874800
      - name: hasLabs
        in: query
        description: An optional parameter used to filter for classes that have available labs. If true is passed, only classes with labs are returned. If false is passed, only classes without labs are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      - name: availableOnline
        in: query
        description: An optional parameter used to filter for classes that are available online. If true is passed, only online classes are returned. If false is passed, only physically delivered classes are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: customFields
        in: query
        description: An optional parameter used to filter for classes based on custom field values.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldSearchFilter'
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClassesResponse'
      deprecated: false
  /SearchPublicClassSchedule:
    get:
      tags:
      - Class Management
      summary: SearchPublicClassSchedule
      description: Allows you to search the public class schedule for your organization, including classes made available to your organization by partner organizations.
      operationId: SearchPublicClassSchedule
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: |-
          The value you want to sort by. If not supplied, a default value of "Start" will be used. You can append " DESC" after the sort value to sort descending. For example, "Start DESC" would sort by class start time in descending order. Possible values:
          - Name
          - Course
          - ConfirmationStatus
          - Start
          - End
          - Organization
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: An optional parameter used to filter for classes by name. When specified, only classes that have names that contain or match the this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
          nullable: true
      - name: hasLabs
        in: query
        description: An optional parameter used to filter for classes that have available labs. If true is passed, only classes with labs are returned. If false is passed, only classes without labs are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: true
      - name: availableOnline
        in: query
        description: An optional parameter used to filter for classes that are available online. If true is passed, only online classes are returned. If false is passed, only physically delivered classes are returned.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchPublicClassScheduleResponse'
      deprecated: false
  /GetClassCustomFields:
    get:
      tags:
      - Class Management
      summary: GetClassCustomFields
      description: Retreives a list of all available custom fields for your organization.
      operationId: GetClassCustomFields
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassCustomFieldResponse'
      deprecated: false
  /GetClassCustomFieldValue:
    get:
      tags:
      - Class Management
      summary: GetClassCustomFieldValue
      description: Retreives the current value of a specific custom field for a class.
      operationId: GetClassCustomFieldValue
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customFieldId
        in: query
        description: The ID of the custom field of which's value to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: classId
        in: query
        description: The ID of the class of which's custom field value to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValueResponse'
      deprecated: false
  /UpdateClassCustomFieldValue:
    get:
      tags:
      - Class Management
      summary: UpdateClassCustomFieldValue
      description: Updates the current value of a specific custom field for a class.
      operationId: UpdateClassCustomFieldValue
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: customFieldId
        in: query
        description: The ID of the custom field of which's value to update
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: classId
        in: query
        description: The ID of the class of which's custom field value to update
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: textValue
        in: query
        description: 'The value of a text type class custom field: Textbox and Dropdown List'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: numericValue
        in: query
        description: The value of a numeric type class custom field
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: booleanValue
        in: query
        description: 'The value for a boolean type class custom field: Checkbox'
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: separatedListValues
        in: query
        description: 'A Tab separated list of all the text values for a multi-select custom field type: Checkbox List'
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldValueResponse'
      deprecated: false
  /GetClubMembership:
    get:
      tags:
      - Subscription Management
      summary: GetClubMembership
      description: Allows you to get basic information about a subscription.
      operationId: GetClubMembership
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the subscription to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClubMembershipResponse'
      deprecated: false
  /GetClubMembershipByExternalId:
    get:
      tags:
      - Subscription Management
      summary: GetClubMembershipByExternalId
      description: Allows you to get information about a subscription by providing a unique identifier from your external system.
      operationId: GetClubMembershipByExternalId
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The external ID of the subscription to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClubMembershipResponse'
      deprecated: false
  /CreateClubMembership:
    get:
      tags:
      - Subscription Management
      summary: CreateClubMembership
      description: Allows you to create a subscription.
      operationId: CreateClubMembership
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: externalId
        in: query
        description: The exernal ID of the subscription, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clubId
        in: query
        description: The Id of the related subscription profile
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: The Id of the related user
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: starts
        in: query
        description: When the subscription starts (in Unix epoch time)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: expires
        in: query
        description: When the subscription expires (in Unix epoch time)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: targetCompletion
        in: query
        description: When the subscription is expected to be completed by the student (in Unix epoch time)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClubMembershipResponse'
      deprecated: false
  /DeleteClubMembership:
    get:
      tags:
      - Subscription Management
      summary: DeleteClubMembership
      description: Allows you to delete a subscription.
      operationId: DeleteClubMembership
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the subscription to delete
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /UpdateClubMembership:
    get:
      tags:
      - Subscription Management
      summary: UpdateClubMembership
      description: Allows you to update a subscription.
      operationId: UpdateClubMembership
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the subscription
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: externalId
        in: query
        description: The exernal ID of the subscription, usually a unique identifier from the calling system
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clubId
        in: query
        description: The Id of the related subscription profile
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: userId
        in: query
        description: The Id of the related user
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: starts
        in: query
        description: When the subscription starts (in Unix epoch time)
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: expires
        in: query
        description: When the subscription expires (in Unix epoch time)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: targetCompletion
        in: query
        description: When the subscription is expected to be completed by the student (in Unix epoch time)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /CreateCompany:
    get:
      tags:
      - Company Management
      summary: CreateCompany
      description: Allows you to create a company.
      operationId: CreateCompany
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Name
        in: query
        description: The Name of the company (limit 150 characters)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: ExternalId
        in: query
        description: The External Id of the company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Description
        in: query
        description: The Description of the company (limit 800 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OrganizationId
        in: query
        description: The Id of the Organization associated with this company
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OwningUserId
        in: query
        description: The Id of the owning User (if any) associated with this company
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: AssignableToUsers
        in: query
        description: Indicates whether the Company is Assignable to Users
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: Theme
        in: query
        description: The name of the Theme to be used for the company
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Address1
        in: query
        description: The first Address line for a Company (limit 250 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Address2
        in: query
        description: The second Address line for a Company (limit 250 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: City
        in: query
        description: The City for a Company (limit 80 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: State
        in: query
        description: The State for a Company (recommended use standard 2-character abbreviation, limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Zip
        in: query
        description: The Zip code for a Company (limit 20 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Country
        in: query
        description: The Country for a Company (recommended use standard 2-character abbreviation, limit 80 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Email
        in: query
        description: The Email address for a Company (limit 256 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Phone
        in: query
        description: The Phone number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Phone2
        in: query
        description: The alternate Phone number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Fax
        in: query
        description: The Fax number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: WebSiteUrl
        in: query
        description: The Web Site Url for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CustomDropdown1
        in: query
        description: The first Custom Dropdown list for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CustomDropdown2
        in: query
        description: The second Custom Dropdown list for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCompanyResponse'
      deprecated: false
  /UpdateCompany:
    get:
      tags:
      - Company Management
      summary: UpdateCompany
      description: Allows you to update a company.
      operationId: UpdateCompany
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Id
        in: query
        description: The ID of the company
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: Name
        in: query
        description: The Name of the company (limit 150 characters)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: ExternalId
        in: query
        description: The External Id of the company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Description
        in: query
        description: The Description of the company (limit 800 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: OrganizationId
        in: query
        description: The Id of the Organization associated with this company
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: OwningUserId
        in: query
        description: The Id of the owning User (if any) associated with this company
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: AssignableToUsers
        in: query
        description: Indicates whether the Company is Assignable to Users
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: Theme
        in: query
        description: The name of the Theme to be used for the company
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Address1
        in: query
        description: The first Address line for a Company (limit 250 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Address2
        in: query
        description: The second Address line for a Company (limit 250 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: City
        in: query
        description: The City for a Company (limit 80 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: State
        in: query
        description: The State for a Company (recommended use standard 2-character abbreviation, limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Zip
        in: query
        description: The Zip code for a Company (limit 20 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Country
        in: query
        description: The Country for a Company (recommended use standard 2-character abbreviation, limit 80 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Email
        in: query
        description: The Email address for a Company (limit 256 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Phone
        in: query
        description: The Phone number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Phone2
        in: query
        description: The alternate Phone number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: Fax
        in: query
        description: The Fax number for a Company (limit 50 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: WebSiteUrl
        in: query
        description: The Web Site Url for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CustomDropdown1
        in: query
        description: The first Custom Dropdown list for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: CustomDropdown2
        in: query
        description: The second Custom Dropdown list for a Company (limit 200 characters)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /DeleteCompany:
    get:
      tags:
      - Company Management
      summary: DeleteCompany
      description: Allows you to delete a company.
      operationId: DeleteCompany
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the company to delete
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      deprecated: false
  /GetCompany:
    get:
      tags:
      - Company Management
      summary: GetCompany
      description: Allows you to get a company.
      operationId: GetCompany
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the company to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCompanyResponse'
      deprecated: false
  /ExportSurveyResponses:
    get:
      tags:
      - Survey Management
      summary: ExportSurveyResponses
      description: Allows you to get a company.
      operationId: ExportSurveyResponses
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: id
        in: query
        description: The ID of the survey to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyResultResponse'
      deprecated: false
  /SearchClubs:
    get:
      tags:
      - Subscription Management
      summary: SearchClubs
      description: Allows you to search for subscription profiles.
      operationId: SearchClubs
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 1
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          example: 20
      - name: sort
        in: query
        description: "The value you want to sort by.  \nPossible values:  \nName  \nProgram  \nCompanyOrganization  \nOwner  \nClub  \nCompany  \nStarts  \nExpires  \nSize  \nUsed  \nCreated  \nLastModified  "
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: An optional parameter used to filter for subscription profiles by name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: courseId
        in: query
        description: An optional parameter used to filter for subscription profiles by the associated course ID
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: createdAfter
        in: query
        description: An optional parameter used to filter for subscription profiles created after a specified date
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: createdBefore
        in: query
        description: An optional parameter used to filter for subscription profiles created before a specified date
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchClubResultResponse'
      deprecated: false
  /SearchClubMemberships:
    get:
      tags:
      - Subscription Management
      summary: SearchClubMemberships
      description: Allows you to search for user's subscriptions.
      operationId: SearchClubMemberships
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: "The value you want to sort by.  \nPossible values:  \nUserId  \nExternalUserId  \nSubscription  \nStarts  \nExpires  \nTargetCompletion  \nCreated  \nLastModified  "
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: An optional parameter used to filter subscriptions by the associated userid. When specified, only user subscriptions that have an associated userid that matches this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: userExternalId
        in: query
        description: An optional parameter used to filter subscriptions by the associated user external id. When specified, only user subscriptions that have an associated external user id that matches that value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscriptionId
        in: query
        description: An optional parameter used to filter subscriptions by subscription id. When specified, only user subscriptions that matches this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: createdAfter
        in: query
        description: An optional parameter used to filter subscriptions created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: createdBefore
        in: query
        description: An optional parameter used to filter subscriptions created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSubscriptionResponse'
  /SearchSubscriptions:
    get:
      tags:
      - Subscription Management
      summary: SearchSubscriptions
      description: Allows you to search for user's subscriptions.
      operationId: SearchSubscriptions
      parameters:
      - name: api_key
        in: header
        description: Backend API access
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: pageIndex
        in: query
        description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        description: "The value you want to sort by.  \nPossible values:  \nUserId  \nExternalUserId  \nSubscription  \nStarts  \nExpires  \nTargetCompletion  \nCreated  \nLastModified  "
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: userId
        in: query
        description: An optional parameter used to filter subscriptions by the associated userid. When specified, only user subscriptions that have an associated userid that matches this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: userExternalId
        in: query
        description: An optional parameter used to filter subscriptions by the associated user external id. When specified, only user subscriptions that have an associated external user id that matches that value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: subscriptionId
        in: query
        description: An optional parameter used to filter subscriptions by subscription id. When specified, only user subscriptions that matches this value will be returned.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: createdAfter
        in: query
        description: An optional parameter used to filter subscriptions created after a specified date. When used in conjunction with the "createdBefore" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: createdBefore
        in: query
        description: An optional parameter used to filter subscriptions created before a specified date. When used in conjunction with the "createdAfter" parameter, it becomes possible to filter for a given time range. This should be provided in unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSubscriptionResponse'
components:
  schemas:
    CreateResponse:
      type: object
      properties:
        status:
          type: integer
          description: "Indicates the status of the API request.  \n\n- 0 = Success  \n- 10 = Error  \n- 30 = Invalid integration key"
          format: int32
          example: 10
        error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
    ApiResponse:
      type: object
      properties:
        status:
          type: integer
          description: "Indicates the status of the API request.  \n\n- 0 = Success  \n- 10 = Error  \n- 20 = Not found  \n- 30 = Invalid integration key"
          format: int32
          example: 10
        error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
    UserResponse:
      type: object
      properties:
        Status:
          type: integer
          description: "Indicates the status of the API request.  \n0 = Success  \n10 = Error  \n20 = Not found  \n30 = Invalid integration key"
          format: int32
          example: 0
        Error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
        User:
          $ref: '#/components/schemas/User'
        Roles:
          type: array
          description: Identifiers of roles the user belongs to
          example:
          - 0
          - 2
          items:
            type: integer
            format: int32
        ManagedOrganizations:
          type: array
          description: Identifiers of organizations the user has management rights to
          example: []
          items:
            type: integer
            format: int32
        CustomFields:
          type: array
          description: Custom Fields that have values for the user
          example:
          - Name: Core Id
            TextValue: AXY12345
            CustomFieldId: 5080
          - Name: Blood Type
            TextValue: A+
            CustomFieldId: 5081
          items:
            type: object
    SsoRedirectUrlReponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Url:
          type: string
          description: The URL the user should be redirected to. The URL is valid for 20 seconds.
          example: http://[root-url]/Service/ExternalLogon?authenticationKey=84a11167-fc8f-43ba-86ae-4f89c0c6160f
    SignInHistorySearchHistoryResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See SignInHistorySearchResult.
          items:
            $ref: '#/components/schemas/SignInHistorySearchResult'
    SearchUserActivityResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See UserActivitySearchResult.
          items:
            $ref: '#/components/schemas/UserActivitySearchResult'
    AnnouncementResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See Announcement.
          items:
            $ref: '#/components/schemas/Announcement'
    DeleteResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        RowsAffected:
          $ref: '#/components/schemas/RowsAffected'
    UserRoleResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Roles:
          type: array
          description: See Role Object.
          items:
            $ref: '#/components/schemas/Role'
    OrganizationResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Organization:
          $ref: '#/components/schemas/Organization'
        Children:
          type: array
          description: Identifiers of child organizations that belong to the organization
          items:
            type: integer
            format: int32
    SearchCourseResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseSearchResult.
          items:
            $ref: '#/components/schemas/CourseSearchResult'
    CourseResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Course:
          $ref: '#/components/schemas/Course'
    SearchCourseTagGroupResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseTagGroupSearchResult
          items:
            $ref: '#/components/schemas/CourseTagGroupSearchResult'
    SearchCourseFeedbackReponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseFeedbackSearchResult
          items:
            $ref: '#/components/schemas/CourseFeedbackSearchResult'
    ClassEnrollmentResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See ClassEnrollment
          items:
            $ref: '#/components/schemas/ClassEnrollment'
    CreateClassEnrollmentResponse:
      type: object
      properties:
        status:
          type: integer
          description: "Indicates the status of the API request.  \n\n- 0 = Success  \n- 10 = Error  \n- 20 = Not found  \n- 30 = Invalid integration key"
          format: int32
          example: 10
        error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
        ClassEnrollmentId:
          type: integer
          description: The ID of the created class enrollment.
          format: int32
          example: 45632
    ClassEnrollmentSearchResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See ClassEnrollment
          items:
            $ref: '#/components/schemas/ClassEnrollment'
    CourseAssignmentResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See CousreAssignment
          items:
            $ref: '#/components/schemas/CourseAssignment'
    CreateCourseAssignmentResponse:
      type: object
      properties:
        status:
          type: integer
          description: "Indicates the status of the API request.  \n\n- 0 = Success  \n- 10 = Error  \n- 20 = Not found  \n- 30 = Invalid integration key"
          format: int32
          example: 10
        error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
        CourseAssignmentId:
          type: integer
          description: The ID of the created course assignment.
          format: int32
          example: 45632
    SearchCourseAssignmentsResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseAssignmentSearchResult
          items:
            $ref: '#/components/schemas/CourseAssignmentSearchResult'
    SearchCourseCatalogSearchHistoryResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseAssignmentSearchResult
          items:
            $ref: '#/components/schemas/CourseCatalogSearchHistorySearchResult'
    SearchLabInstancesResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See LabInstanceSearchResult
          items:
            $ref: '#/components/schemas/LabInstanceSearchResult'
    SearchCourseExternalActivityLaunchesResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See CourseExternalActivityLaunchSearchResult
          items:
            $ref: '#/components/schemas/CourseExternalActivityLaunchSearchResult'
    ClassResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See Class
          items:
            $ref: '#/components/schemas/Class'
    CreateClassResponse:
      type: object
      properties:
        status:
          type: integer
          description: "Indicates the status of the API request.  \n\n- 0 = Success  \n- 10 = Error  \n- 20 = Not found  \n- 30 = Invalid integration key"
          format: int32
          example: 10
        error:
          type: string
          description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
          nullable: true
        ClassId:
          type: integer
          description: The ID of the created class.
          format: int32
          example: 3456
    SearchClassesResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See ClassSearchResult
          items:
            $ref: '#/components/schemas/ClassSearchResult'
    SearchPublicClassScheduleResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        Results:
          type: array
          description: See PublicClassSearchResult
          items:
            $ref: '#/components/schemas/PublicClassSearchResult'
    ClassCustomFieldResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See CousreAssignment
          items:
            $ref: '#/components/schemas/ClassCustomFields'
    CustomFieldValueResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Id:
          type: integer
          description: The custom field's unique identifier
          format: int32
        Name:
          type: string
          description: The name of the custom field
        DataTypeId:
          type: integer
          description: "The data type id of the custom field  \n0 - Textbox  \n10 - Dropdown List  \n20 - Checkbox  \n30 - Number  \n60 - User Selector  \n70 - Checkbox List  "
          format: int32
        TextValue:
          type: string
          description: The text value of a custom field, if any.
          nullable: true
        NumericValue:
          type: integer
          description: The integer value of a custom field, if any.
          format: int32
          nullable: true
        BooleanValue:
          type: boolean
          description: The boolean value of a custom field, if any.
          nullable: true
        SeparatedListValue:
          type: string
          description: A tab separated list of the selected values of a custom field.
          nullable: true
    User:
      type: object
      properties:
        Id:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 57383
        ExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: C9876ZFGEFER9876
        Title:
          type: string
          description: The user's title
          nullable: true
        FirstName:
          type: string
          description: The user's first name
          example: John
        MiddleName:
          type: string
          description: The user's middle name
          nullable: true
        LastName:
          type: string
          description: The user's last name
          example: Smith
        UserName:
          type: string
          description: The user's username (used during sign-in)
          example: john.smith
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 4873
        CompanyId:
          type: integer
          description: The Id of the user's company (set only if the user belongs to a company)
          format: int32
          nullable: true
        ManagerId:
          type: integer
          description: The user Id of the user's manager (set only if the user belongs to a manager)
          format: int32
          nullable: true
        Disabled:
          type: boolean
          description: Indicates whether the user account has been disabled
          example: false
        Email:
          type: string
          description: The user's e-mail address
          example: joe.smith@yourorg.com
        Phone:
          type: string
          description: The user's phone number
          nullable: true
        Phone2:
          type: string
          description: The user's secondary phone number
          nullable: true
        Address1:
          type: string
          description: First line of the user's address
          nullable: true
        Address2:
          type: string
          description: Second line of the user's address
          nullable: true
        City:
          type: string
          description: The user's city
          nullable: true
        State:
          type: string
          description: The user's state
          nullable: true
        Country:
          type: string
          description: The user's country
          nullable: true
        Zip:
          type: string
          description: The user's zip/postal code
          nullable: true
        ProfileImageUrl:
          type: string
          description: URL to the user's profile image
          nullable: true
        TimeZoneId:
          type: string
          description: The User's timezone
          nullable: true
    SignInHistorySearchResult:
      type: object
      properties:
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 190615
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: 5A875994-33DE-DE11-92BB-00505690582E
        FirstName:
          type: string
          description: The user's first name
          example: John
        LastName:
          type: string
          description: The user's last name
          example: Doe
        UserName:
          type: string
          description: The user's UserName (used during sign-in)
          example: john.doe
        Email:
          type: string
          description: The user's e-mail address
          example: john.doe@sample.net
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 2471
        SignIn:
          type: integer
          description: When the user sign-in occurred (in Unix epoch time)
          format: int64
          example: 1466117145
        Method:
          type: string
          description: "The method that was used to authenticate the user with possible values of: \n- Unknown \n- Local Account \n- Authentication Provider \n- API"
          example: Local Account
        Provider:
          type: string
          description: The name of the Authentication Provider when the "Method" field is "Authentication Provider".
          nullable: true
    UserActivitySearchResult:
      type: object
      properties:
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 2222
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: 5A875994-33DE-DE11-92BB-00505690582E
        FirstName:
          type: string
          description: The user's first name
          example: Jane
        LastName:
          type: string
          description: The user's last name
          example: Doe
        UserName:
          type: string
          description: The user's UserName
          example: jane.doe
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 1234
        ImpersonatingUserId:
          type: integer
          description: The user id of the impersonating user (if any)
          format: int32
          nullable: true
          example: 4321
        ImpersonatingFirstName:
          type: string
          description: The impersonating user's first name (if any)
          example: Steve
        ImpersonatingLastName:
          type: string
          description: The impersonating user's last name (if any)
          example: Smith
        RequestTime:
          type: integer
          description: When the user activity occurred (in Unix epoch time)
          format: int64
          example: 190615
        Method:
          type: string
          description: The method of the request
          example: GET
        Referrer:
          type: string
          description: The referring URL (if any)
          nullable: true
        Url:
          type: string
          description: The URL of the request
          nullable: true
        UserAgent:
          type: string
          description: The reported UserAgent of the request
          nullable: true
        UserHostAddress:
          type: string
          description: The reported Host Address of the request
          nullable: true
        UserLanguages:
          type: string
          description: The reported languages of the request
          nullable: true
        ExecutionTimeMS:
          type: integer
          description: The execution time of the request (in milliseconds)
          format: int64
          example: 55
    Announcement:
      type: object
      properties:
        Id:
          type: integer
          description: The announcement's unique identifier
          format: int32
          example: 45632
        Title:
          type: string
          description: The announcement's title
          example: Sample Announcement
        Url:
          type: string
          description: The Url which the announcement is meant to link to.
          nullable: true
          example: ""
        Description:
          type: string
          description: The announcement's description
          nullable: true
          example: This is an example Announcement
        HtmlContent:
          type: string
          description: The announcement's HTML Content
          nullable: true
          example: <h1>This is an important Announcement!</h1><p>This is the content of the announcement.</p>
        Start:
          type: integer
          description: When the announcement starts (in Unix epoch time)
          format: int64
          example: 1449496800
        End:
          type: integer
          description: When the announcement starts (in Unix epoch time)
          format: int64
          nullable: true
          example: 1450479600
    Role:
      type: object
      properties:
        Id:
          type: integer
          description: The role's unique identifier
          format: int32
          example: 78965
        Name:
          type: string
          description: The name of the role
          example: Student
        Description:
          type: string
          description: The description of the role
          nullable: true
          example: The default role assigned to all accounts.
    Organization:
      type: object
      properties:
        Id:
          type: integer
          description: The organization's unique identifier
          format: int32
          example: 567
        ExternalId:
          type: string
          description: The organization's external ID, usually a unique identifier from the calling system
          nullable: true
          example: B93762AC6FEE987A
        Name:
          type: string
          description: The organization's name
          example: Child Organization 1
        Description:
          type: string
          description: An optional description
          nullable: true
          example: A sample child organization
        ParentId:
          type: string
          description: The ID of the organization's parent organization
          nullable: true
          example: "458"
        IntegrationKey:
          type: string
          description: The organization's API integration key. This can be used for making API calls in the context of this organization as opposed to the context of a parent.
          example: "987654321"
        TimeZoneId:
          type: string
          description: The organization's default time zone. This is used as a default when creating new users and events.
          example: Central Standard Time
        Culture:
          type: string
          description: The organization's default language/culture setting. This is used as a default when creating new users and events.
          example: en-US
        DefaultUserPassword:
          type: string
          description: The default password for new users in the organization
          nullable: true
          example: Password
        DefaultUserNamePattern:
          type: string
          description: "The default pattern selected for creating a username for a new user in the organization. \n- Email"
          example: FirstNameLastName
        Enabled:
          type: boolean
          description: is the organization enabled.
          example: true
    CourseSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The unique identifier of the course.
          format: int32
          example: 4567
        ExternalId:
          type: string
          description: The course assignment's external ID, usually a unique identifier from the calling system.
          nullable: true
          example: FC8D0166-B2F3-4705-8187-5D72BA81F511
        Name:
          type: string
          description: The name of the course.
          example: Course A
        Description:
          type: string
          description: The activity's description
          nullable: true
          example: ""
        OrganizationId:
          type: integer
          description: The ID of the organization the course belongs to.
          format: int32
          example: 455
        OrganizationName:
          type: string
          description: The name of the organization the course belongs to.
          example: Sample Organization
        ContentProviderId:
          type: integer
          description: The ID of the course content provider.
          format: int32
          nullable: true
          example: 9876
        AvailableInstructorLed:
          type: boolean
          description: Indicates whether the course is available instructor-led.
          example: true
        AvailableSelfPaced:
          type: boolean
          description: Indicates whether the course is available self-paced.
          example: false
        CustomFields:
          type: array
          description: See CustomField
          items:
            $ref: '#/components/schemas/CustomField'
        Created:
          type: integer
          description: When the course was created. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1449496820
        LastModified:
          type: integer
          description: When the course was last modified. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1584035105
    Course:
      type: object
      properties:
        Id:
          type: integer
          description: The course's unique identifier
          format: int32
          example: 5678
        ExternalId:
          type: string
          description: The course's external ID, usually a unique identifier from the calling system
          nullable: true
          example: ce2637fc-7eac-43d1-9e75-565e9f7ff53b
        Name:
          type: string
          description: The Name of the course
          example: A Course Name
        Description:
          type: string
          description: The description of the course
          nullable: true
          example: A course description
        HtmlDescription:
          type: string
          description: The HTML description of the course
          nullable: true
          example: <p>Some HTML Description</p>
        AvailableInstructorLed:
          type: boolean
          description: The setting for if this course is available to be delivered in an instructor-led format
          example: true
        AvailableSelfPaced:
          type: boolean
          description: The setting for if this course is available to be delivered in a self-paced format
          example: true
        OrganizationId:
          type: integer
          description: The Id of the owning organization for this course
          format: int32
          nullable: true
          example: 345
        OrganizationName:
          type: string
          description: The name of the owning organization for this course
          nullable: true
          example: Organization Name Sample
        ContentProviderId:
          type: integer
          description: The Id of the content provider for this course (if any)
          format: int32
          nullable: true
          example: 123
        ContentProviderName:
          type: string
          description: The name of the content provider for this course (if any)
          nullable: true
          example: Content Prvider Name Sample
        Activities:
          type: array
          description: See Activity.
          items:
            $ref: '#/components/schemas/Activity'
        Duration:
          type: number
          description: The course's duration.
          format: float
          example: 144.5
        DurationUnitId:
          type: integer
          description: "The course's duration type identification. \nValues include: \n- Minutes = 0 \n- Hours = 1 \n- Days = 2 \n- Weeks = 3"
          format: int32
          example: 2
        Tags:
          type: array
          description: See Tag.
          items:
            $ref: '#/components/schemas/Tag'
        CustomFields:
          type: array
          description: See CustomField
          items:
            $ref: '#/components/schemas/CustomField'
        Created:
          type: integer
          description: When the course was created. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1449496800
        LastModified:
          type: integer
          description: the course was last modified. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1584035120
    Activity:
      type: object
      properties:
        Id:
          type: integer
          description: The activity's unique identifier
          format: int32
          example: 33345
        ParentId:
          type: integer
          description: The Id of the activity's parent activity (if any)
          format: int32
          nullable: true
        ActivityId:
          type: integer
          format: int32
          example: 29119
          description: The internal Id of the activity.
        ActivityTypeId:
          type: integer
          description: "The Id of the activity type: \n- ScormModule = 2 \n- Lab = 4 \n- Survey = 10 \n- InstructorSurvey = 20 \n- OrganizationSurvey = 30 \n- ExternalLink = 40 \n- Assessment = 50 \n- Video = 60 \n- Document = 70 -\n Section = 80"
          format: int32
          example: 4
        ActivityTypeName:
          type: string
          description: The activity's type name
          example: Lab
        Name:
          type: string
          description: The activity's name
          example: Activity Name Sample
        Description:
          type: string
          description: The activity's description
          nullable: true
          example: Activity description sample
        Subtitle:
          type: string
          description: The activity's subtitle
          nullable: true
        AllowRetake:
          type: boolean
          description: The activity's setting to allow retakes
          example: true
        AllowReview:
          type: boolean
          description: The activity's setting to allow review
          example: false
        Url:
          type: string
          description: The activity's url
          nullable: true
        SortOrder:
          type: integer
          description: The activity's sort order index
          format: int32
          example: 0
        Required:
          type: boolean
          description: The activity's setting for if the activity is required for course completion
          example: true
        AvailabilityTypeId:
          type: integer
          description: "The activity's availablility type id \n- Everyone = 0 \n- Instructors Only = 1"
          format: int32
          example: 0
        ExpectedDurationSeconds:
          type: integer
          description: The activity's expected duration in seconds
          format: int32
          example: 3540
        IsExam:
          type: boolean
          description: The activity's setting as an exam (This only applies to Lab type activities)
          example: false
        Activities:
          type: array
          description: See Activity.
          items:
            $ref: '#/components/schemas/Activity'
    Tag:
      type: object
      properties:
        Id:
          type: integer
          description: TThe tag's unique identifier.
          format: int32
          example: 2
        Name:
          type: string
          description: The tag's name.
          nullable: true
          example: Tag Example 1
    CustomField:
      type: object
      properties:
        Name:
          type: string
          description: The name of the custom field.
          example: MyCustomText
        TexValue:
          type: string
          description: The value of thecustom field.
          example: Woohoo!
    CourseTagGroupSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The course tag group unique identifier
          format: int32
          example: 5678
        Name:
          type: string
          description: The course tag groups name
          nullable: true
          example: A Course Name
        Tags:
          type: array
          description: See Tag
          items:
            $ref: '#/components/schemas/Tag'
    CourseFeedbackSearchResult:
      type: object
      properties:
        Submitted:
          type: integer
          description: When the feedback entry was created. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1492203295
        CourseId:
          type: integer
          description: The Id of the course.
          format: int32
          example: 1234
        CourseName:
          type: string
          description: The name of the course.
          example: Course 1234 name sample
        Title:
          type: string
          description: The title of the feedback message.
          example: Course 1234 title sample
        Content:
          type: string
          description: The text content of the feedback message.
          nullable: true
          example: Course content sample
        Positive:
          type: boolean
          description: Indicates whether the feedback is positive.
          example: false
        Negative:
          type: boolean
          description: Indicates whether the feedback is negative.
          example: true
        UserId:
          type: integer
          description: The Id of the user (if available) of the user that submitted the feedback.
          format: int32
          nullable: true
          example: 279207
        UserExternalId:
          type: string
          description: The ExternalId of the user (if available) of the user that submitted the feedback.
          nullable: true
          example: 831ab062-fcd9-44c7-9ffd-15ef98e9746e
        CourseAssignmentId:
          type: integer
          description: The Id of the course assignment (if any).
          format: int32
          nullable: true
          example: 68905
        ClassEnrollmentId:
          type: integer
          description: The Id of the class enrollent (if any).
          format: int32
          nullable: true
          example: 4576
        ActivityId:
          type: integer
          description: The Id of the activity (if any).
          format: int32
          nullable: true
          example: 123
        ActivityTypeId:
          type: integer
          description: "The Id of the activity type (if any)\n- ScormModule = 2 \n- Lab = 4 \n- Survey = 10 \n- InstructorSurvey = 20 \n- OrganizationSurvey = 30 \n- ExternalLink = 40 \n- Assessment = 50 \n- Video = 60 \n- Document = 70"
          format: int32
          nullable: true
          example: 123
        ActivityName:
          type: string
          description: The activity's name (if any)
          nullable: true
          example: Sample activity name
    ClassEnrollment:
      type: object
      properties:
        Id:
          type: integer
          description: The class enrollment's unique identifier
          format: int32
          example: 10
        ExternalId:
          type: string
          description: The class enrollment's external ID, usually a unique identifier from the calling system
          nullable: true
          example: E3G5YZFREFEQ9371
        UserId:
          type: integer
          description: The Id of the related user
          format: int32
          example: 897615
        ClassId:
          type: integer
          description: The Id of the related class
          format: int32
          example: 4421
        EnrollmentStatusId:
          type: integer
          description: "Indicates the status of the class enrollment \n- 0 = Request \n- 10 = Cancel \n- 20 = Waitlist \n- 30 = Approve \n- 40 = Deny \n- 50 = Audit \n- 60 = Enroll"
          format: int32
          example: 60
        CompletionStatusId:
          type: integer
          description: "Indicates the completion status of the class enrollment \n- 0 = Unknown \n- 10 = Attending \n- 20 = Complete \n- 30 = Incomplete \n- 40 = NoShow \n- 50 = Failed"
          format: int32
          example: 0
        LateCancel:
          type: boolean
          description: Indicates if the class enrollment was cancelled outside the late cancellation window.
          example: false
        Retake:
          type: boolean
          description: Indicates if the class enrollment is a retake.
          example: false
        LocationTypeId:
          type: integer
          description: "Indicates the location type that the student is assigned to attend the class \n- 0 = To Be Determined \n- 10 = Classroom \n- 20 = Remote Classroom \n- 30 = Virtual"
          format: int32
          nullable: true
          example: 0
        ClassroomId:
          type: integer
          description: The ID of the classroom (if any) in which the student is assigned to attend the class.
          format: int32
          nullable: true
          example: 3456
        HoursSpent:
          type: integer
          description: The hours spent by the student in the class enrollment.
          format: int32
          nullable: true
          example: 20
        Grade:
          type: integer
          description: The grade the student received for the class enrollment.
          format: int32
          nullable: true
          example: 10
    CourseAssignment:
      type: object
      properties:
        Id:
          type: integer
          description: The course assignment's unique identifier
          format: int32
          example: 1234
        ExternalId:
          type: string
          description: The course assignment's external ID, usually a unique identifier from the calling system
          nullable: true
          example: C9876ZFGEFER9876
        CourseId:
          type: integer
          description: The Id of the course associated with this course assignment.
          format: int32
          example: 123
        UserId:
          type: integer
          description: The UserId of the user that is associated with this course assignment.
          format: int32
          example: 3434
        ClubMembershipId:
          type: integer
          description: The subscription (if any) associated with this course assignment.
          format: int32
          nullable: true
          example: 119955
        Expire:
          type: integer
          description: When the course assignment expires (if ever) (in Unix epoch time)
          format: int64
          nullable: true
          example: 1450479600
        TargetCompletion:
          type: integer
          description: When course assignment is expected to be completed by the student (in Unix epoch time)
          format: int64
          nullable: true
          example: 1449496800
        Start:
          type: integer
          description: When the course assignment was started (if ever) (in Unix epoch time)
          format: int64
          nullable: true
          example: 1449496800
        Complete:
          type: integer
          description: When the course assignment was completed (if ever) (in Unix epoch time)
          format: int64
          nullable: true
    CourseAssignmentSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The course assignment's unique identifier
          format: int32
          example: 12345
        ExternalId:
          type: string
          description: The course assignment's external ID, usually a unique identifier from the calling system
          nullable: true
          example: FC8D0166
        CourseId:
          type: integer
          description: The course's unique identifier
          format: int32
          example: 1234
        CourseName:
          type: string
          description: The name of the course
          example: Course name sample
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 190615
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: 89CFAB18-443D-495C-89B0-95A85E0A00BA
        FirstName:
          type: string
          description: The user's first name
          example: Sally
        LastName:
          type: string
          description: The user's last name
          example: Doe
        Email:
          type: string
          description: The user's e-mail address
          example: sally.doe@sample.net
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 2471
        PaymentType:
          type: string
          description: What type of key was used to get access to the course
          example: Subscription (Microsoft Total Access Collection)
        Created:
          type: integer
          description: When the course assignment was created. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1295375536
        Expires:
          type: integer
          description: When the course assignment expires. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          nullable: true
          example: 1310947200
        Started:
          type: integer
          description: When the course assignment was started by the user. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          nullable: true
          example: 1295378841
        Completed:
          type: integer
          description: When the course assignment was completed by the user. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          nullable: true
          example: 1295386048
    CourseCatalogSearchHistorySearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The search result's unique identifier
          format: int64
          example: 4754
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 190615
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: EC11A1BE-4A26-4D28-AA75-F41E3F56DB57
        FirstName:
          type: string
          description: The user's first name
          example: Jane
        LastName:
          type: string
          description: The user's last name
          example: Doe
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 3456
        Search:
          type: integer
          description: When the search was run. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1466092675
        TextFilter:
          type: string
          description: The text filter entered by the user
          nullable: true
          example: Scripting
        Tags:
          type: array
          description: All tags selected by the user. See Tag type below.
          items:
            $ref: '#/components/schemas/Tag'
        ClubIds:
          type: array
          description: Unique identifiers of all clubs the search was filtered against.
          example:
          - 1234
          - 4332
          items:
            type: integer
            format: int64
            example: 123
        PageIndex:
          type: integer
          description: The zero-based index of the page of results displayed by the search
          format: int32
          example: 10
        NumResults:
          type: integer
          description: The total number of results matched by the search
          format: int32
          example: 10
    LabInstanceSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The lab instance's unique identifier
          format: int64
          example: 4042909
        LabId:
          type: integer
          description: The lab profile's unique identifier
          format: int32
          example: 6742
        LabNumber:
          type: string
          description: The number/code of the lab
          example: Lab201
        LabName:
          type: string
          description: The name the lab
          example: Sample lab name
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 78956
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: 89CFAB18-443D-495C-89B0-95A85E0A00BA
        FirstName:
          type: string
          description: The user's first name
          example: Jane
        LastName:
          type: string
          description: The user's last name
          example: Doe
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 457
        Start:
          type: integer
          description: When the lab instance started. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1465500264
        End:
          type: integer
          description: When the lab instance ended. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          nullable: true
          example: 1465500264
        TotalRunTimeSeconds:
          type: integer
          description: The text filter entered by the user
          format: int32
          nullable: true
          example: 164
        ExpectedDurationSeconds:
          type: integer
          description: The amount of time expected for the lab to take in seconds
          format: int32
          nullable: true
          example: 43200
        TaskCompletePercent:
          type: integer
          description: The percentage of the lab that has been completed by the user
          format: int32
          example: 0
        CompletionStatus:
          type: integer
          description: |-
            Indicates the completion status of the lab instance. Possible Values:
            - 0 = Cancelled
            - 10 = In progress
            - 20 = Complete
            - 30 = Error
          format: int32
          nullable: true
          example: 10
        CourseId:
          type: integer
          description: The unique identifier of the course the lab instance was launched from
          format: int32
          nullable: true
          example: 33410
        CourseAssignmentId:
          type: integer
          description: The unique identifier of the course assignment the lab instance was launched from
          format: int32
          nullable: true
          example: 315143
        ClassId:
          type: integer
          description: The unique identifier of the class the lab instance was launched from
          format: int32
          nullable: true
          example: 56476
        UserIpAddress:
          type: string
          description: The user's ip address recorded when a new lab instance is launched
          nullable: true
          example: 127.0.0.1
        LastActivityTime:
          type: integer
          description: When student activity was last detected. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          nullable: true
          example: 1585690845
    CourseExternalActivityLaunchSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The launch unique identifier
          format: int64
          example: 5478141
        Activity:
          type: string
          description: The name of the activty that was launched
          example: URL 1
        ActivityType:
          type: integer
          description: |-
            Indicates the type of the activity launched. Possible values:
            - 40 = URL
            - 60 = Video
            - 70 = Document
          format: int32
          example: 40
        UserId:
          type: integer
          description: The user's unique identifier
          format: int32
          example: 34521
        UserExternalId:
          type: string
          description: The user's external ID, usually a unique identifier from the calling system
          nullable: true
          example: EC11A1BE-4A26-4D28-AA75-F41E3F56DB57
        FirstName:
          type: string
          example: Jane
        LastName:
          type: string
          example: Doe
        OrganizationId:
          type: integer
          description: The unique identifier of the organization the user belongs to
          format: int32
          example: 77889
        Launch:
          type: integer
          description: When the activity was launched. Provided in Unix epoch format, which is the number of seconds that have elapsed since midnight UTC January 1st, 1970.
          format: int64
          example: 1465758373
        CourseId:
          type: integer
          description: The unique identifier of the course the activity was launched from
          format: int32
          nullable: true
          example: 442
        CourseAssignmentId:
          type: integer
          description: The unique identifier of the course assignment the activity was launched from
          format: int32
          nullable: true
          example: 3456
        ClassEnrollmentId:
          type: integer
          description: The unique identifier of the class enrollment the activity was launched from
          format: int32
          nullable: true
          example: 3445
    Class:
      type: object
      properties:
        Id:
          type: integer
          description: The class's unique identifier
          format: int32
          example: 56794
        ExternalId:
          type: integer
          description: The class's ExternalId identifier
          format: int32
        Name:
          type: string
          description: The class's name
          example: Sample Class Name
        Description:
          type: string
          description: The class's Description
          nullable: true
          example: Sample Description
        HtmlDescription:
          type: string
          description: The class's HTML Description
          nullable: true
        Enabled:
          type: boolean
          description: Gives the class's status
          example: true
        ConfirmationStatusId:
          type: integer
          description: Gives the class's ConfirmationStatusId
          format: int32
          example: 5634
        CourseId:
          type: integer
          description: The class's course identifier
          format: int32
          example: 5678
        OrganizationId:
          type: integer
          description: The class's organization identifier
          format: int32
          example: 123
        OrganizationName:
          type: string
          description: The class's organization name
          example: Sample Organization Id
        CompanyId:
          type: integer
          description: The class's company identifier
          format: int32
          nullable: true
          example: 1235
        DeliveryTypeId:
          type: integer
          description: The class's delivery identifier
          format: int32
          example: 34
        VirtualMeetingHostId:
          type: integer
          description: The class's virtual meeting host identifier
          format: int32
          nullable: true
          example: 14
        VirtualMeetingId:
          type: string
          description: The class's VirtualMeeting identifier
          nullable: true
        CustomVirtualClassroomUrl:
          type: string
          description: The class's custom VirtualMeeting Url
          nullable: true
        PrimaryInstructorId:
          type: integer
          description: The class's primaryInstructor identifier
          format: int32
          nullable: true
        PrimaryInstructorFirstName:
          type: string
          description: The class's primary instructor first name
          nullable: true
        PrimaryInstructorLastName:
          type: string
          description: The class's primary instructor last name
          nullable: true
        PrimaryClassroomId:
          type: integer
          description: The class's primary classroom identifier
          format: int32
          nullable: true
          example: 4535
        MaterialsListId:
          type: integer
          description: The class's materials list identifier
          format: int32
          nullable: true
          example: 45
        Start:
          type: integer
          description: When the class starts (in Unix epoch time).
          format: int64
          example: 1320757200
        End:
          type: integer
          description: When the class ends (in Unix epoch time).
          format: int64
          example: 1320757200
        MinStudents:
          type: integer
          description: The minimum number of students enrolled
          format: int32
          example: 2
        MaxStudents:
          type: integer
          description: The maximum number of students enrolled
          format: int32
          example: 5
        AllowSelfEnrollment:
          type: boolean
          description: Distinguishes if self enrollment is allowed
          example: false
        IsPublic:
          type: boolean
          description: Distinguishes if the class is public
          example: true
        EnableClassTrainingKey:
          type: boolean
          description: Distinguishes if the class allows registration via a class training key
          example: true
        ClassTrainingKey:
          type: string
          description: The class training key (if enabled) that will allow for self registration in the class
          nullable: true
          example: ABC1234
        DisableLabs:
          type: boolean
          description: Distinguishes if the class is disabled
          example: false
        EnableEnrollmentNotifications:
          type: boolean
          description: Distinguishes if enrollment notifications are enabled
          example: true
        IsUniqueDelivery:
          type: boolean
          description: Distinguishes if unique delivery is enabled
          example: false
        RecordingModeId:
          type: integer
          description: The class's recording Mode identifier
          format: int32
          example: 6743
        CustomText1:
          type: string
          description: CustomText1
          example: Sample custom text 1
        CustomText2:
          type: string
          description: CustomText2
          example: Sample custom text 2
        CustomText3:
          type: string
          description: CustomText3
          nullable: true
        CustomText4:
          type: string
          description: CustomText4
          nullable: true
        CustomText5:
          type: string
          description: CustomText5
          nullable: true
        CustomBool1:
          type: boolean
          description: CustomBool1
          example: true
        CustomBool2:
          type: boolean
          description: CustomBool2
          example: true
        CustomBool3:
          type: boolean
          description: CustomBool3
          example: true
        CustomBool4:
          type: boolean
          description: CustomBool4
          example: false
        CustomBool5:
          type: boolean
          description: CustomBool5
          example: false
        CustomDropdown1:
          type: string
          description: CustomDropdown1
          nullable: true
        CustomDropdown2:
          type: string
          description: CustomDropdown2
          nullable: true
        SurveyId:
          type: integer
          description: The class's survey identifier
          format: int32
          nullable: true
          example: 334523
        StudentSurveyAvailabilityStartTypeId:
          type: integer
          description: Identifies when Student survey is becomes available in relation to SurveyAvailabilityStartHours. 0 for hours before event ends; 1 for hours after event ends.
          format: int32
          example: 55534
        SurveyAvailabilityStartHours:
          type: integer
          description: Number of hours after class end that the survey is available
          format: int32
          example: 4
        SurveyAvailabilityEndDays:
          type: integer
          description: Number of days after class end that the survey is available
          format: int32
          example: 30
        InstructorSurveyId:
          type: integer
          description: The class's survey identifier for instructors
          format: int32
          nullable: true
          example: 356
        OrganizationSurveyId:
          type: integer
          description: The class's survey identifier for organizations
          format: int32
          nullable: true
          example: 1034
        OrganizationSurveyResponseId:
          type: integer
          description: The class's survey response identifier for organizations
          format: int32
          nullable: true
        ClassroomAddress1:
          type: string
          description: Classroom address
          nullable: true
          example: 123 Sample Dr.
        ClassroomAddress2:
          type: string
          description: Classroom address
          nullable: true
        ClassroomCity:
          type: string
          description: Classroom address
          nullable: true
          example: Sample City
        ClassroomState:
          type: string
          description: Classroom address
          nullable: true
          example: Florida
        ClassroomCountry:
          type: string
          description: Classroom address
          nullable: true
          example: Sample County
        ClassroomZip:
          type: string
          description: Classroom address
          nullable: true
          example: "12345"
        CustomFields:
          type: array
          description: See CustomField
          items:
            $ref: '#/components/schemas/CustomField'
        SessionTimes:
          type: array
          description: See SessionTimes
          items:
            $ref: '#/components/schemas/ClassSession'
    ClassSession:
      type: object
      properties:
        Start:
          type: integer
          description: When the class starts (in Unix epoch time).
          format: int64
          example: 1320876000
        End:
          type: integer
          description: When the class ends (in Unix epoch time).
          format: int64
          example: 1320876000
    ClassMeeting:
      type: object
      properties:
        Start:
          type: integer
          description: WWhen the class meeting starts UTC (in Unix epoch time).
          format: int64
          example: 1320876000
        End:
          type: integer
          description: When the class meeting ends UTC (in Unix epoch time).
          format: int64
          example: 1320876000
    CustomFieldSearchFilter:
      type: object
      properties:
        Id:
          type: integer
          description: The Id of the custom field you are searching against.
          format: int32
          example: 1234
        ComparisonType:
          type: integer
          description: "The Compairson Type for the search filter. Will default to 0 if not included.  \n0 - Equals  \n5 - Not Equals  "
          format: int32
          example: 0
        Value:
          type: string
          description: The value you would like to filter that custom field by in string representation.
          example: Some Value
    ClassSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The class's unique identifier
          format: int32
          example: 56794
        CourseId:
          type: integer
          description: The unique identifier of the course the class is based on.
          format: int32
          example: 5678
        CourseName:
          type: string
          description: The name of the course the class is based on.
          example: Sample course Name
        ConfirmationStatusId:
          type: integer
          description: "Indicates the current status of whether the class will run. \n- Scheduled = 0\n- GuaranteedToRun = 1\n- Cancelled = 2\n- Rescheduled = 3\n- Tentative = 4\n- Requested = 5\n- Denied = 6\n- Completed = 7"
          format: int32
          example: 2223
        Start:
          type: integer
          description: When the class starts (in Unix epoch time).
          format: int64
          example: 1320757200
        End:
          type: integer
          description: When the class ends (in Unix epoch time).
          format: int64
          example: 1320757200
        OrganizationId:
          type: integer
          description: The class's organization identifier
          format: int32
          example: 123
        OrganizationName:
          type: string
          description: The class's organization name
          example: Sample Organization Id
        NumOpen:
          type: integer
          description: The number of enrolled users in the class.
          format: int32
          nullable: true
          example: 6
        NumEnroll:
          type: integer
          description: The minimum number of students the organization requires to be in the class to run it.
          format: int32
          nullable: true
          example: 45
        MinStudents:
          type: integer
          description: The minimum number of students enrolled
          format: int32
          example: 2
        MaxStudents:
          type: integer
          description: The maximum number of students enrolled
          format: int32
          example: 5
        VirtualMeetingHostId:
          type: integer
          description: The class's virtual meeting host identifier
          format: int32
          nullable: true
          example: 14
        VirtualMeetingId:
          type: string
          description: The class's VirtualMeeting identifier
          nullable: true
        CustomVirtualClassroomUrl:
          type: string
          description: The class's custom VirtualMeeting Url
          nullable: true
        IsPublic:
          type: boolean
          description: Distinguishes if the class is public
          nullable: true
          example: true
        Description:
          type: string
          description: The class's Description
          nullable: true
          example: Sample Description
        ClassroomId:
          type: integer
          description: The class's primary classroom identifier
          format: int32
          nullable: true
          example: 12345
        ClassroomAddress1:
          type: string
          description: Classroom address
          nullable: true
          example: 123 Sample Dr.
        ClassroomAddress2:
          type: string
          description: Classroom address
          nullable: true
        ClassroomCity:
          type: string
          description: Classroom address
          nullable: true
          example: Sample City
        ClassroomState:
          type: string
          description: Classroom address
          nullable: true
          example: Florida
        ClassroomCountry:
          type: string
          description: Classroom address
          nullable: true
          example: Sample County
        ClassroomZip:
          type: string
          description: Classroom address
          nullable: true
          example: "12345"
        HtmlDescription:
          type: string
          description: The class's HTML Description
          nullable: true
        CustomFields:
          type: array
          description: See CustomField
          items:
            $ref: '#/components/schemas/CustomField'
        DeliveryTypeId:
          type: integer
          description: The class's delivery identifier
          format: int32
          example: 34
        InstructorId:
          type: integer
          description: The class's primaryInstructor identifier
          format: int32
          nullable: true
        InstructorFirstName:
          type: string
          description: The class's primary instructor first name
          nullable: true
        InstructorLastName:
          type: string
          description: The class's primary instructor last name
          nullable: true
        EnableClassTrainingKey:
          type: boolean
          description: Distinguishes if the class allows registration via a class training key
          example: false
        ClassTrainingKey:
          type: string
          description: The class training key (if enabled) that will allow for self registration in the class
          nullable: true
          example: ABC1234
    PublicClassSearchResult:
      type: object
      properties:
        Id:
          type: integer
          description: The class's unique identifier
          format: int32
          example: 56794
        CourseId:
          type: integer
          description: The unique identifier of the course the class is based on.
          format: int32
          example: 5678
        CourseName:
          type: string
          description: The name of the course the class is based on.
          example: Sample course Name
        ConfirmationStatusId:
          type: integer
          description: "Indicates the current status of whether the class will run. \n- Scheduled = 0\n- GuaranteedToRun = 1\n- Cancelled = 2\n- Rescheduled = 3\n- Tentative = 4\n- Requested = 5\n- Denied = 6\n- Completed = 7"
          format: int32
          example: 2223
        Start:
          type: integer
          description: When the class starts (in Unix epoch time).
          format: int64
          example: 1320757200
        End:
          type: integer
          description: When the class ends (in Unix epoch time).
          format: int64
          example: 1320757200
        OrganizationId:
          type: integer
          description: The class's organization identifier
          format: int32
          example: 123
        OrganizationName:
          type: string
          description: The class's organization name
          example: Sample Organization Id
        NumOpen:
          type: integer
          description: The number of enrolled users in the class.
          format: int32
          nullable: true
          example: 6
        NumEnroll:
          type: integer
          description: The minimum number of students the organization requires to be in the class to run it.
          format: int32
          nullable: true
          example: 45
        MinStudents:
          type: integer
          description: The minimum number of students enrolled
          format: int32
          example: 2
        MaxStudents:
          type: integer
          description: The maximum number of students enrolled
          format: int32
          example: 5
        VirtualMeetingHostId:
          type: integer
          description: The class's virtual meeting host identifier
          format: int32
          nullable: true
          example: 14
        VirtualMeetingId:
          type: string
          description: The class's VirtualMeeting identifier
          nullable: true
        CustomVirtualClassroomUrl:
          type: string
          description: The class's custom VirtualMeeting Url
          nullable: true
        ClassroomId:
          type: string
          description: The class's primary classroom identifier
          nullable: true
          example: "12345"
        ClassroomAddress1:
          type: string
          description: Classroom address
          nullable: true
          example: 123 Sample Dr.
        ClassroomAddress2:
          type: string
          description: Classroom address
          nullable: true
        ClassroomCity:
          type: string
          description: Classroom address
          nullable: true
          example: Sample City
        ClassroomState:
          type: string
          description: Classroom address
          nullable: true
          example: Florida
        ClassroomCountry:
          type: string
          description: Classroom address
          nullable: true
          example: Sample County
        ClassroomZip:
          type: string
          description: Classroom address
          nullable: true
          example: "12345"
        HtmlDescription:
          type: string
          description: The class's HTML Description
          nullable: true
        DeliveryTypeId:
          type: integer
          description: The class's delivery identifier
          format: int32
          example: 34
    ClassCustomFields:
      type: object
      properties:
        Id:
          type: integer
          description: The custom field's unique identifier
          format: int32
          example: 10
        Name:
          type: string
          description: The name of the custom field
          example: CustomClassFieldName1
        Description:
          type: string
          description: The description of the custom field
          nullable: true
          example: Sample custom class field name 1
        DataTypeId:
          type: integer
          description: "The data type id of the custom field \n- 0 = Textbox\n- 10 = Dropdown List\n- 20 = Checkbox\n- 30 = Number\n- 60 = User Selector\n- 70 = Checkbox List"
          format: int32
          example: 10
        Values:
          type: array
          description: An array of type String representing the available selectable options in the case of Dropdown List and Checkbox List, for all other data types it will be an empty array ([])
          example:
          - string 1
          - string 2
          - string 3
          items:
            type: string
        SortOrder:
          type: integer
          description: An integer representing the order in which it will be displayed on the class create/edit pages.
          format: int32
          example: 2
    CreateClubMembershipResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        ClubMembershipId:
          type: integer
          description: The ID of the created subscription.
          format: int32
          example: 45632
    ClubMembershipResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See ClubMembership.
          items:
            $ref: '#/components/schemas/ClubMembership'
    ClubMembership:
      type: object
      properties:
        Id:
          type: integer
          description: The unique identifier of the course.
          format: int32
          example: 45632
        ExternalId:
          type: string
          description: The course assignment's external ID, usually a unique identifier from the calling system
          nullable: true
          example: E3G5YZFREFEQ9371
        ClubId:
          type: integer
          description: The Id of the related subscription profile
          format: int32
          example: 4421
        UserId:
          type: integer
          description: The Id of the related user
          format: int32
          example: 897615
        Starts:
          type: integer
          description: When the subscription starts (in Unix epoch time)
          format: int64
          example: 1449496800
        Expires:
          type: integer
          description: When the subscription starts (in Unix epoch time)
          format: int64
          nullable: true
          example: 1450479600
        TargetCompletion:
          type: integer
          description: When the subscription is expected to be completed by the student (in Unix epoch time)
          format: int64
          nullable: true
          example: 1449874800
    SearchClubResultResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        SearchClubResults:
          type: array
          description: See SearchClubResult.
          items:
            $ref: '#/components/schemas/SearchClubResult'
    SearchClubResult:
      type: object
      properties:
        ClubId:
          type: integer
          description: The subscription profile's unique identifier.
          format: int32
          example: 523
        Name:
          type: string
          description: The subscription profile's name.
          example: .Net Subscription Profile
        ProgramId:
          type: integer
          description: The subscription profile's program.
          format: int32
          example: 1
        ProgramName:
          type: string
          description: The subscription profile's program name.
          example: Training
        OrganizationId:
          type: integer
          description: The subscription profile's organization.
          format: int32
          example: 387
        OrganizationName:
          type: string
          description: The subscription profile's organization name.
          example: ABC Training Company
        Price:
          type: number
          description: The subscription profile's price.
          example: 0
        LastModified:
          type: string
          description: When the subscription profile was last modified.
          example: 2017-04-19T22:16:07.967+0000
        Created:
          type: string
          description: When the subscription profile was created.
          example: 2012-04-17T15:21:21.953+0000
        CourseIds:
          type: array
          description: A collection of ClubAssociatedCourses.
          items:
            $ref: '#/components/schemas/ClubAssociatedCourses'
    ClubAssociatedCourses:
      type: object
      properties:
        CourseId:
          type: integer
          description: The subscription profile's associated couseId.
          format: int32
          example: 8992
        Name:
          type: string
          description: The course name.
          example: .NET Programming Fundamentals
    SearchSubscriptionResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        TotalCount:
          $ref: '#/components/schemas/TotalCount'
        TotalPages:
          $ref: '#/components/schemas/TotalPages'
        SearchSubscriptionsResults:
          type: array
          description: See SearchSubscriptionsResult.
          items:
            $ref: '#/components/schemas/SearchSubscriptionsResult'
    SearchSubscriptionsResult:
      type: object
      properties:
        SubscriptionProfileId:
          type: integer
          description: The subscription profile's unique identifier.
          format: int32
          example: 523
        SubscriptionProfileName:
          type: string
          description: The subscription profile's name.
          example: .Net Club
        Starts:
          type: string
          description: When the subscription starts.
          nullable: true
          example: 2021-03-19T22:16:07.967Z
        Expires:
          type: string
          description: When the subscription ends or expires.
          nullable: true
          example: 2022-03-19T22:15:59.997Z
        LastModified:
          type: string
          description: When the subscription was last modified.
          nullable: true
          example: 2021-04-19T11:23:02.567Z
        Created:
          type: string
          description: When the subscription was created.
          nullable: true
          example: 2021-03-19T22:16:07.967Z
    CreateCompanyResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        CompanyId:
          type: integer
          description: The ID of the created company.
          format: int32
          example: 45632
    GetCompanyResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        SearchSubscriptionsResults:
          type: array
          description: See Company results.
          items:
            $ref: '#/components/schemas/Company'
    Company:
      type: object
      properties:
        Id:
          type: integer
          description: The company's unique identifier.
          format: int32
        Name:
          type: string
          description: The Name of the company
        ExternalId:
          type: string
          description: The External Id of the company
          nullable: true
        Description:
          type: string
          description: The Description of the company
          nullable: true
        OrganizationId:
          type: integer
          description: The Id of the Organization associated with this company
          format: int32
        OwningUserId:
          type: integer
          description: The Id of the owning User (if any) associated with this company
          format: int32
          nullable: true
        AssignableToUsers:
          type: boolean
          description: Indicates whether the Company is Assignable to Users
        Theme:
          type: string
          description: The name of the Theme to be used for the company
          nullable: true
        Address1:
          type: string
          description: The first Address line for a Company
          nullable: true
        Address2:
          type: string
          description: The second Address line for a Company
          nullable: true
        City:
          type: string
          description: The City for a Company
          nullable: true
        State:
          type: string
          description: The State for a Company (recommended use standard 2-character abbreviation, limit 50 characters)
          nullable: true
        Zip:
          type: string
          description: The Zip code for a Company
          nullable: true
        Country:
          type: string
          description: The Country for a Company (recommended use standard 2-character abbreviation, limit 80 characters)
          nullable: true
        Email:
          type: string
          description: The Email address for a Company
          nullable: true
        Phone:
          type: string
          description: The Phone number for a Company
          nullable: true
        Phone2:
          type: string
          description: The alternate Phone number for a Company
          nullable: true
        Fax:
          type: string
          description: The Fax number for a Company
          nullable: true
        WebSiteUrl:
          type: string
          description: The Web Site Url for a Company
          nullable: true
        CustomDropdown1:
          type: string
          description: The first Custom Dropdown list for a Company
          nullable: true
        CustomDropdown2:
          type: string
          description: The second Custom Dropdown list for a Company
          nullable: true
    SurveyResultResponse:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/Status'
        Error:
          $ref: '#/components/schemas/Error'
        Results:
          type: array
          description: See SurveyResult.
          items:
            $ref: '#/components/schemas/SurveyResult'
    SurveyResult:
      type: object
      properties:
        CourseId:
          type: integer
          description: The course's unique identifier.
          format: int32
          example: 98669
        ClassId:
          type: integer
          description: The class's unique identifier.
          format: int32
          nullable: true
          example: 13324
        Class:
          type: string
          description: The class's name.
          example: 1077A Administering Exams 401
        ClassStartDate:
          type: string
          description: The class's start date.
          example: 2013-04-22T20:00:00Z
        ClassEndDate:
          type: string
          description: The class's end date.
          example: 2013-04-27T06:00:00Z
        InstructorName:
          type: string
          description: The instructor's name.
          example: John Doe
        InstructorEmail:
          type: string
          description: The instructor's email.
          example: john.doe@test.edu
        StudentName:
          type: string
          description: The student's name.
          example: Lesley Claypool
        StudentEmail:
          type: string
          description: The student's email.
          example: s.cheese@testemail.com
        QuestionsAndResponses:
          type: array
          description: A collection of answer and response pairs.
          items:
            $ref: '#/components/schemas/QuestionsAndResponse'
    QuestionsAndResponse:
      type: object
      properties:
        Question:
          type: string
          description: A survey question.
          example: did you like the class?
        Response:
          type: string
          description: A survey resonse.
          example: "true"
    Status:
      type: integer
      description: "Indicates the status of the API request.  \n0 = Success  \n10 = Error  \n20 = Not found  \n30 = Invalid integration key"
      format: int32
      example: 0
    Error:
      type: string
      description: Error details. This will only have a value if an error was encountered. The status property will also be set to Error (10).
      nullable: true
    TotalCount:
      type: integer
      description: The total number of results that match the search conditions, not all of which may be in the current result set.
      format: int32
      example: 1
    TotalPages:
      type: integer
      description: The total number of result pages that match the search conditions.
      format: int32
      example: 1
    RowsAffected:
      type: integer
      description: The number of database rows affected while removing all data.
      format: int32
      example: 5
  parameters:
    timeZoneId:
      name: timeZoneId
      in: query
      description: "The time zone for the data object. If not specified, the timezone of the organization will be used.  \n\n**Allowed values**  \n  \nAfghanistan Standard Time  \nAlaskan Standard Time  \nAleutian Standard Time  \nAltai Standard Time  \nArab Standard Time  \nArabian Standard Time  \nArabic Standard Time  \nArgentina Standard Time  \nAstrakhan Standard Time  \nAtlantic Standard Time  \nAUS Central Standard Time  \nAus Central W. Standard Time  \nAUS Eastern Standard Time  \nAzerbaijan Standard Time  \nAzores Standard Time  \nBahia Standard Time  \nBangladesh Standard Time  \nBelarus Standard Time  \nBougainville Standard Time  \nCanada Central Standard Time  \nCape Verde Standard Time  \nCaucasus Standard Time  \nCen. Australia Standard Time  \nCentral America Standard Time  \nCentral Asia Standard Time  \nCentral Brazilian Standard Time  \nCentral Europe Standard Time  \nCentral European Standard Time  \nCentral Pacific Standard Time  \nCentral Standard Time  \nCentral Standard Time (Mexico)  \nChatham Islands Standard Time  \nChina Standard Time  \nCuba Standard Time  \nDateline Standard Time  \nE. Africa Standard Time  \nE. Australia Standard Time  \nE. Europe Standard Time  \nE. South America Standard Time  \nEaster Island Standard Time  \nEastern Standard Time  \nEastern Standard Time (Mexico)  \nEgypt Standard Time  \nEkaterinburg Standard Time  \nFiji Standard Time  \nFLE Standard Time  \nGeorgian Standard Time  \nGMT Standard Time  \nGreenland Standard Time  \nGreenwich Standard Time  \nGTB Standard Time  \nHaiti Standard Time  \nHawaiian Standard Time  \nIndia Standard Time  \nIran Standard Time  \nIsrael Standard Time  \nJordan Standard Time  \nKaliningrad Standard Time  \nKamchatka Standard Time  \nKorea Standard Time  \nLibya Standard Time  \nLine Islands Standard Time  \nLord Howe Standard Time  \nMagadan Standard Time  \nMagallanes Standard Time  \nMarquesas Standard Time  \nMauritius Standard Time  \nMid-Atlantic Standard Time  \nMiddle East Standard Time  \nMontevideo Standard Time  \nMorocco Standard Time  \nMountain Standard Time  \nMountain Standard Time (Mexico)  \nMyanmar Standard Time  \nN. Central Asia Standard Time  \nNamibia Standard Time  \nNepal Standard Time  \nNew Zealand Standard Time  \nNewfoundland Standard Time  \nNorfolk Standard Time  \nNorth Asia East Standard Time  \nNorth Asia Standard Time  \nNorth Korea Standard Time  \nOmsk Standard Time  \nPacific SA Standard Time  \nPacific Standard Time  \nPacific Standard Time (Mexico)  \nPakistan Standard Time  \nParaguay Standard Time  \nQyzylorda Standard Time  \nRomance Standard Time  \nRussia Time Zone 10  \nRussia Time Zone 11  \nRussia Time Zone 3  \nRussian Standard Time  \nSA Eastern Standard Time  \nSA Pacific Standard Time  \nSA Western Standard Time  \nSaint Pierre Standard Time  \nSakhalin Standard Time  \nSamoa Standard Time  \nSao Tome Standard Time  \nSaratov Standard Time  \nSE Asia Standard Time  \nSingapore Standard Time  \nSouth Africa Standard Time  \nSouth Sudan Standard Time  \nSri Lanka Standard Time  \nSudan Standard Time  \nSyria Standard Time  \nTaipei Standard Time  \nTasmania Standard Time  \nTocantins Standard Time  \nTokyo Standard Time  \nTomsk Standard Time  \nTonga Standard Time  \nTransbaikal Standard Time  \nTurkey Standard Time  \nTurks And Caicos Standard Time  \nUlaanbaatar Standard Time  \nUS Eastern Standard Time  \nUS Mountain Standard Time  \nUTC  \nUTC+12  \nUTC+13  \nUTC-02  \nUTC-08  \nUTC-09  \nUTC-11  \nVenezuela Standard Time  \nVladivostok Standard Time  \nVolgograd Standard Time  \nW. Australia Standard Time  \nW. Central Africa Standard Time  \nW. Europe Standard Time  \nW. Mongolia Standard Time  \nWest Asia Standard Time  \nWest Bank Standard Time  \nWest Pacific Standard Time  \nYakutsk Standard Time  \nYukon Standard Time"
      required: false
      style: form
      explode: true
      schema:
        type: string
    culture:
      name: culture
      in: query
      description: "The default language/culture setting. This is used as a default when creating new users and events. If not specified, the culture of the parent organization will be used. \n\n Allowed Values \n\n \n- aa-DJ \n- aa-ER \n- aa-ET \n- af-NA \n- af-ZA \n- agq-CM \n- ak-GH \n- am-ET \n- ar-001 \n- ar-AE \n- ar-BH \n- ar-DJ \n- ar-DZ \n- ar-EG \n- ar-ER \n- ar-IL \n- ar-IQ \n- ar-JO \n- ar-KM \n- ar-KW \n- ar-LB \n- ar-LY \n- ar-MA \n- ar-MR \n- arn-CL \n- ar-OM \n- ar-PS \n- ar-QA \n- ar-SA \n- ar-SD \n- ar-SO \n- ar-SS \n- ar-SY \n- ar-TD \n- ar-TN \n- ar-YE \n- asa-TZ \n- as-IN \n- ast-ES \n- az-Cyrl-AZ \n- az-Latn-AZ \n- ba-RU \n- bas-CM \n- be-BY \n- bem-ZM \n- bez-TZ \n- bg-BG \n- bin-NG \n- bm-Latn-ML \n- bn-BD \n- bn-IN \n- bo-CN \n- bo-IN \n- br-FR \n- brx-IN \n- bs-Cyrl-BA \n- bs-Latn-BA \n- byn-ER \n- ca-AD \n- ca-ES \n- ca-ES-valencia \n- ca-FR \n- ca-IT \n- ce-RU \n- cgg-UG \n- chr-Cher-US \n- co-FR \n- cs-CZ \n- cu-RU \n- cy-GB \n- da-DK \n- da-GL \n- dav-KE \n- de-AT \n- de-BE \n- de-CH \n- de-DE \n- de-LI \n- de-LU \n- dje-NE \n- dsb-DE \n- dua-CM \n- dv-MV \n- dyo-SN \n- dz-BT \n- ebu-KE \n- ee-GH \n- ee-TG \n- el-CY \n- el-GR \n- en-001 \n- en-029 \n- en-150 \n- en-AG \n- en-AI \n- en-AS \n- en-AT \n- en-AU \n- en-BB \n- en-BE \n- en-BI \n- en-BM \n- en-BS \n- en-BW \n- en-BZ \n- en-CA \n- en-CC \n- en-CH \n- en-CK \n- en-CM \n- en-CX \n- en-CY \n- en-DE \n- en-DK \n- en-DM \n- en-ER \n- en-FI \n- en-FJ \n- en-FK \n- en-FM \n- en-GB \n- en-GD \n- en-GG \n- en-GH \n- en-GI \n- en-GM \n- en-GU \n- en-GY \n- en-HK \n- en-ID \n- en-IE \n- en-IL \n- en-IM \n- en-IN \n- en-IO \n- en-JE \n- en-JM \n- en-KE \n- en-KI \n- en-KN \n- en-KY \n- en-LC \n- en-LR \n- en-LS \n- en-MG \n- en-MH \n- en-MO \n- en-MP \n- en-MS \n- en-MT \n- en-MU \n- en-MW \n- en-MY \n- en-NA \n- en-NF \n- en-NG \n- en-NL \n- en-NR \n- en-NU \n- en-NZ \n- en-PG \n- en-PH \n- en-PK \n- en-PN \n- en-PR \n- en-PW \n- en-RW \n- en-SB \n- en-SC \n- en-SD \n- en-SE \n- en-SG \n- en-SH \n- en-SI \n- en-SL \n- en-SS \n- en-SX \n- en-SZ \n- en-TC \n- en-TK \n- en-TO \n- en-TT \n- en-TV \n- en-TZ \n- en-UG \n- en-UM \n- en-US \n- en-VC \n- en-VG \n- en-VI \n- en-VU \n- en-WS \n- en-ZA \n- en-ZM \n- en-ZW \n- eo-001 \n- es-419 \n- es-AR \n- es-BO \n- es-CL \n- es-CO \n- es-CR \n- es-CU \n- es-DO \n- es-EC \n- es-ES \n- es-GQ \n- es-GT \n- es-HN \n- es-MX \n- es-NI \n- es-PA \n- es-PE \n- es-PH \n- es-PR \n- es-PY \n- es-SV \n- es-US \n- es-UY \n- es-VE \n- et-EE \n- eu-ES \n- ewo-CM \n- fa-IR \n- ff-CM \n- ff-GN \n- ff-Latn-SN \n- ff-MR \n- ff-NG \n- fi-FI \n- fil-PH \n- fo-DK \n- fo-FO \n- fr-029 \n- fr-BE \n- fr-BF \n- fr-BI \n- fr-BJ \n- fr-BL \n- fr-CA \n- fr-CD \n- fr-CF \n- fr-CG \n- fr-CH \n- fr-CI \n- fr-CM \n- fr-DJ \n- fr-DZ \n- fr-FR \n- fr-GA \n- fr-GF \n- fr-GN \n- fr-GP \n- fr-GQ \n- fr-HT \n- fr-KM \n- fr-LU \n- fr-MA \n- fr-MC \n- fr-MF \n- fr-MG \n- fr-ML \n- fr-MQ \n- fr-MR \n- fr-MU \n- fr-NC \n- fr-NE \n- fr-PF \n- fr-PM \n- fr-RE \n- fr-RW \n- fr-SC \n- fr-SN \n- fr-SY \n- fr-TD \n- fr-TG \n- fr-TN \n- fr-VU \n- fr-WF \n- fr-YT \n- fur-IT \n- fy-NL \n- ga-IE \n- gd-GB \n- gl-ES \n- gn-PY \n- gsw-CH \n- gsw-FR \n- gsw-LI \n- gu-IN \n- guz-KE \n- gv-IM \n- ha-Latn-GH \n- ha-Latn-NE \n- ha-Latn-NG \n- haw-US \n- he-IL \n- hi-IN \n- hr-BA \n- hr-HR \n- hsb-DE \n- hu-HU \n- hy-AM \n- ia-001 \n- ia-FR \n- ibb-NG \n- id-ID \n- ig-NG \n- ii-CN \n- is-IS \n- it-CH \n- it-IT \n- it-SM \n- iu-Cans-CA \n- iu-Latn-CA \n- ja-JP \n- jgo-CM \n- jmc-TZ \n- jv-Java-ID \n- jv-Latn-ID \n- kab-DZ \n- ka-GE \n- kam-KE \n- kde-TZ \n- kea-CV \n- khq-ML \n- ki-KE \n- kkj-CM \n- kk-KZ \n- kl-GL \n- kln-KE \n- km-KH \n- kn-IN \n- kok-IN \n- ko-KP \n- ko-KR \n- kr-NG \n- ks-Arab-IN \n- ksb-TZ \n- ks-Deva-IN \n- ksf-CM \n- ksh-DE \n- ku-Arab-IQ \n- ku-Arab-IR \n- kw-GB \n- ky-KG \n- la-001 \n- lag-TZ \n- lb-LU \n- lg-UG \n- lkt-US \n- ln-AO \n- ln-CD \n- ln-CF \n- ln-CG \n- lo-LA \n- lrc-IQ \n- lrc-IR \n- lt-LT \n- lu-CD \n- luo-KE \n- luy-KE \n- lv-LV \n- mas-KE \n- mas-TZ \n- mer-KE \n- mfe-MU \n- mgh-MZ \n- mg-MG \n- mgo-CM \n- mi-NZ \n- mk-MK \n- ml-IN \n- mni-IN \n- mn-MN \n- mn-Mong-CN \n- mn-Mong-MN \n- moh-CA \n- mr-IN \n- ms-BN \n- ms-MY \n- ms-SG \n- mt-MT \n- mua-CM \n- my-MM \n- mzn-IR \n- naq-NA \n- nb-NO \n- nb-SJ \n- nd-ZW \n- ne-IN \n- ne-NP \n- nl-AW \n- nl-BE \n- nl-BQ \n- nl-CW \n- nl-NL \n- nl-SR \n- nl-SX \n- nmg-CM \n- nnh-CM \n- nn-NO \n- nqo-GN \n- nr-ZA \n- nso-ZA \n- nus-SS \n- nyn-UG \n- oc-FR \n- om-ET \n- om-KE \n- or-IN \n- os-GE \n- os-RU \n- pa-Arab-PK \n- pa-IN \n- pap-029 \n- pl-PL \n- prg-001 \n- prs-AF \n- ps-AF \n- pt-AO \n- pt-BR \n- pt-CV \n- pt-GW \n- pt-MO \n- pt-MZ \n- pt-PT \n- pt-ST \n- pt-TL \n- quc-Latn-GT \n- quz-BO \n- quz-EC \n- quz-PE \n- rm-CH \n- rn-BI \n- rof-TZ \n- ro-MD \n- ro-RO \n- ru-BY \n- ru-KG \n- ru-KZ \n- ru-MD \n- ru-RU \n- ru-UA \n- rwk-TZ \n- rw-RW \n- sah-RU \n- sa-IN \n- saq-KE \n- sbp-TZ \n- sd-Arab-PK \n- sd-Deva-IN \n- se-FI \n- seh-MZ \n- se-NO \n- se-SE \n- ses-ML \n- sg-CF \n- shi-Latn-MA \n- shi-Tfng-MA \n- si-LK \n- sk-SK \n- sl-SI \n- sma-NO \n- sma-SE \n- smj-NO \n- smj-SE \n- smn-FI \n- sms-FI \n- sn-Latn-ZW \n- so-DJ \n- so-ET \n- so-KE \n- so-SO \n- sq-AL \n- sq-MK \n- sq-XK \n- sr-Cyrl-BA \n- sr-Cyrl-ME \n- sr-Cyrl-RS \n- sr-Cyrl-XK \n- sr-Latn-BA \n- sr-Latn-ME \n- sr-Latn-RS \n- sr-Latn-XK \n- ss-SZ \n- ssy-ER \n- ss-ZA \n- st-LS \n- st-ZA \n- sv-AX \n- sv-FI \n- sv-SE \n- sw-CD \n- sw-KE \n- sw-TZ \n- sw-UG \n- syr-SY \n- ta-IN \n- ta-LK \n- ta-MY \n- ta-SG \n- te-IN \n- teo-KE \n- teo-UG \n- tg-Cyrl-TJ \n- th-TH \n- ti-ER \n- ti-ET \n- tig-ER \n- tk-TM \n- tn-BW \n- tn-ZA \n- to-TO \n- tr-CY \n- tr-TR \n- ts-ZA \n- tt-RU \n- twq-NE \n- tzm-Arab-MA \n- tzm-Latn-DZ \n- tzm-Latn-MA \n- tzm-Tfng-MA \n- ug-CN \n- uk-UA \n- ur-IN \n- ur-PK \n- uz-Arab-AF \n- uz-Cyrl-UZ \n- uz-Latn-UZ \n- vai-Latn-LR \n- vai-Vaii-LR \n- ve-ZA \n- vi-VN \n- vo-001 \n- vun-TZ \n- wae-CH \n- wal-ET \n- wo-SN \n- xh-ZA \n- xog-UG \n- yav-CM \n- yi-001 \n- yo-BJ \n- yo-NG \n- zgh-Tfng-MA \n- zh-CN \n- zh-Hans-HK \n- zh-Hans-MO \n- zh-HK \n- zh-MO \n- zh-SG \n- zh-TW \n- zu-ZA"
      required: false
      style: form
      explode: true
      schema:
        type: string
    pageIndex:
      name: pageIndex
      in: query
      description: A 0-based index of the paged results you wish to receive. In general, you should start with a value of zero and increment it as you need to retrieve additional results. If not supplied, a value of 0 is used (the first page of results).
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
        example: 1
    pageSize:
      name: pageSize
      in: query
      description: Indicates how many results you want per page. if not supplied, a default value of 100 is used.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int32
        example: 20
    apiKey:
      name: api_key
      in: header
      description: Backend API access
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: X-API-KEY
      in: header
    apiKeyQuery:
      type: apiKey
      name: api-key
      in: query
